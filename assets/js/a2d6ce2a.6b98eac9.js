"use strict";(self.webpackChunkautomata_docs=self.webpackChunkautomata_docs||[]).push([[6159],{3284:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"automata-signal/components/channel-adapters","title":"[COMP-002] \ucc44\ub110 \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c","description":"| \ubc84\uc804 | \ub0a0\uc9dc       | \ubcc0\uacbd \ub0b4\uc6a9      |","source":"@site/docs/automata-signal/components/channel-adapters.md","sourceDirName":"automata-signal/components","slug":"/automata-signal/components/channel-adapters","permalink":"/automata_docs/docs/automata-signal/components/channel-adapters","draft":false,"unlisted":false,"editUrl":"https://github.com/AutomataOOO/automata_docs/tree/main/docs/automata-signal/components/channel-adapters.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"[FLOW-002] \uba54\uc2dc\uc9c0 \ucc98\ub9ac \ud750\ub984","permalink":"/automata_docs/docs/automata-signal/flows/message-processing-flow"},"next":{"title":"Global rules","permalink":"/automata_docs/docs/global-rules"}}');var r=s(4848),d=s(8453);const i={},t="[COMP-002] \ucc44\ub110 \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c",l={},o=[{value:"\uad00\ub828 \ubb38\uc11c",id:"\uad00\ub828-\ubb38\uc11c",level:2},{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2},{value:"\ub300\uc0c1 \ub3c5\uc790",id:"\ub300\uc0c1-\ub3c5\uc790",level:2},{value:"\uc120\ud589 \uc9c0\uc2dd",id:"\uc120\ud589-\uc9c0\uc2dd",level:2},{value:"1. \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c \uac1c\uc694",id:"1-\uc5b4\ub311\ud130-\uc2dc\uc2a4\ud15c-\uac1c\uc694",level:2},{value:"1.1 \uc8fc\uc694 \ubaa9\ud45c",id:"11-\uc8fc\uc694-\ubaa9\ud45c",level:3},{value:"1.2 \ucc44\ub110 \uc5b4\ub311\ud130 \uc544\ud0a4\ud14d\ucc98 \ub2e4\uc774\uc5b4\uadf8\ub7a8",id:"12-\ucc44\ub110-\uc5b4\ub311\ud130-\uc544\ud0a4\ud14d\ucc98-\ub2e4\uc774\uc5b4\uadf8\ub7a8",level:3},{value:"2. \uc5b4\ub311\ud130 \uc778\ud130\ud398\uc774\uc2a4",id:"2-\uc5b4\ub311\ud130-\uc778\ud130\ud398\uc774\uc2a4",level:2},{value:"2.1 \uc778\ud130\ud398\uc774\uc2a4 \uba54\uc11c\ub4dc \uc124\uba85",id:"21-\uc778\ud130\ud398\uc774\uc2a4-\uba54\uc11c\ub4dc-\uc124\uba85",level:3},{value:"2.1.1 send_message/1",id:"211-send_message1",level:4},{value:"2.1.2 validate_message/1",id:"212-validate_message1",level:4},{value:"2.1.3 get_status/1",id:"213-get_status1",level:4},{value:"2.1.4 map_error/1",id:"214-map_error1",level:4},{value:"3. \ucc44\ub110 \uc5b4\ub311\ud130 \uad6c\ud604",id:"3-\ucc44\ub110-\uc5b4\ub311\ud130-\uad6c\ud604",level:2},{value:"3.1 \ud478\uc2dc \uc54c\ub9bc \uc5b4\ub311\ud130",id:"31-\ud478\uc2dc-\uc54c\ub9bc-\uc5b4\ub311\ud130",level:3},{value:"3.2 \uc774\uba54\uc77c \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)",id:"32-\uc774\uba54\uc77c-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",level:3},{value:"3.3 SMS \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)",id:"33-sms-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",level:3},{value:"3.4 \uce74\uce74\uc624 \uc54c\ub9bc\ud1a1 \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)",id:"34-\uce74\uce74\uc624-\uc54c\ub9bc\ud1a1-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",level:3},{value:"3.5 \uc778\uc571 \uba54\uc2dc\uc9c0 \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)",id:"35-\uc778\uc571-\uba54\uc2dc\uc9c0-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",level:3},{value:"4. \uc5b4\ub311\ud130 \ud329\ud1a0\ub9ac",id:"4-\uc5b4\ub311\ud130-\ud329\ud1a0\ub9ac",level:2},{value:"5. \uba54\uc2dc\uc9c0 \uc804\uc1a1 \ud504\ub85c\uc138\uc2a4",id:"5-\uba54\uc2dc\uc9c0-\uc804\uc1a1-\ud504\ub85c\uc138\uc2a4",level:2},{value:"6. \uc5b4\ub311\ud130 \ud655\uc7a5 \uac00\uc774\ub4dc",id:"6-\uc5b4\ub311\ud130-\ud655\uc7a5-\uac00\uc774\ub4dc",level:2},{value:"6.1 \uae30\ubcf8 \uad6c\ud604 \ub2e8\uacc4",id:"61-\uae30\ubcf8-\uad6c\ud604-\ub2e8\uacc4",level:3},{value:"6.2 \uc0c8 \uc5b4\ub311\ud130 \uad6c\ud604 \uc608\uc2dc",id:"62-\uc0c8-\uc5b4\ub311\ud130-\uad6c\ud604-\uc608\uc2dc",level:3},{value:"6.3 AdapterFactory \uc5c5\ub370\uc774\ud2b8",id:"63-adapterfactory-\uc5c5\ub370\uc774\ud2b8",level:3},{value:"6.4 \uc0c8 \uad6c\ub3c5 \uc720\ud615 \ucd94\uac00",id:"64-\uc0c8-\uad6c\ub3c5-\uc720\ud615-\ucd94\uac00",level:3},{value:"7. \uc131\ub2a5 \ubc0f \ud655\uc7a5\uc131 \uace0\ub824\uc0ac\ud56d",id:"7-\uc131\ub2a5-\ubc0f-\ud655\uc7a5\uc131-\uace0\ub824\uc0ac\ud56d",level:2},{value:"7.1 \uc5f0\uacb0 \ud480\ub9c1",id:"71-\uc5f0\uacb0-\ud480\ub9c1",level:3},{value:"7.2 \ube44\uc728 \uc81c\ud55c \ucc98\ub9ac",id:"72-\ube44\uc728-\uc81c\ud55c-\ucc98\ub9ac",level:3},{value:"7.3 \ubc30\uce58 \ucc98\ub9ac",id:"73-\ubc30\uce58-\ucc98\ub9ac",level:3},{value:"8. \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \uc9c0\ud45c",id:"8-\ubaa8\ub2c8\ud130\ub9c1-\ubc0f-\uc9c0\ud45c",level:2},{value:"8.1 \uc131\ub2a5 \uc9c0\ud45c",id:"81-\uc131\ub2a5-\uc9c0\ud45c",level:3},{value:"8.2 \uc6b4\uc601 \uc9c0\ud45c",id:"82-\uc6b4\uc601-\uc9c0\ud45c",level:3},{value:"8.3 \ub85c\uae45 \uc804\ub7b5",id:"83-\ub85c\uae45-\uc804\ub7b5",level:3},{value:"9. \ud14c\uc2a4\ud2b8 \uc804\ub7b5",id:"9-\ud14c\uc2a4\ud2b8-\uc804\ub7b5",level:2},{value:"9.1 \ub2e8\uc704 \ud14c\uc2a4\ud2b8",id:"91-\ub2e8\uc704-\ud14c\uc2a4\ud2b8",level:3},{value:"9.2 \ud1b5\ud569 \ud14c\uc2a4\ud2b8",id:"92-\ud1b5\ud569-\ud14c\uc2a4\ud2b8",level:3},{value:"9.3 \ubaa8\uc758 \uc5b4\ub311\ud130",id:"93-\ubaa8\uc758-\uc5b4\ub311\ud130",level:3}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"comp-002-\ucc44\ub110-\uc5b4\ub311\ud130-\uc2dc\uc2a4\ud15c",children:"[COMP-002] \ucc44\ub110 \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"\ubc84\uc804"}),(0,r.jsx)(n.th,{children:"\ub0a0\uc9dc"}),(0,r.jsx)(n.th,{children:"\ubcc0\uacbd \ub0b4\uc6a9"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1.0"}),(0,r.jsx)(n.td,{children:"2025-04-02"}),(0,r.jsx)(n.td,{children:"\ucd5c\ucd08 \ubb38\uc11c \uc791\uc131"})]})})]}),"\n",(0,r.jsx)(n.h2,{id:"\uad00\ub828-\ubb38\uc11c",children:"\uad00\ub828 \ubb38\uc11c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"[ARCH-001] \uc544\ud0a4\ud14d\ucc98 \uac1c\uc694"}),"\n",(0,r.jsx)(n.li,{children:"[DICT-001] \uad6c\ub3c5 \uc0c1\ud0dc \ucf54\ub4dc \uc0ac\uc804"}),"\n",(0,r.jsx)(n.li,{children:"[DICT-003] \uba54\uc2dc\uc9c0 \uc0c1\ud0dc \ubc0f \uc804\uc774 \uaddc\uce59"}),"\n",(0,r.jsx)(n.li,{children:"[FLOW-002] \uba54\uc2dc\uc9c0 \ucc98\ub9ac \ud750\ub984"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\uc694\uc57d",children:"\uc694\uc57d"}),"\n",(0,r.jsx)(n.p,{children:"\ubcf8 \ubb38\uc11c\ub294 Automata-Signal\uc758 \ucc44\ub110 \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c\uc5d0 \ub300\ud55c \uc0c1\uc138 \uc124\uacc4\uc640 \uad6c\ud604 \ubc29\ubc95\uc744 \uc124\uba85\ud569\ub2c8\ub2e4. \ucc44\ub110 \uc5b4\ub311\ud130\ub294 \ub2e4\uc591\ud55c \uba54\uc2dc\uc9d5 \ucc44\ub110(\ud478\uc2dc \uc54c\ub9bc, \uc774\uba54\uc77c, SMS \ub4f1)\uacfc\uc758 \ud1b5\ud569\uc744 \ub2f4\ub2f9\ud558\ub294 \ubaa8\ub4c8\ud654\ub41c \ucef4\ud3ec\ub10c\ud2b8\uc785\ub2c8\ub2e4. \ud655\uc7a5 \uac00\ub2a5\ud558\uace0 \uc720\uc9c0\ubcf4\uc218\uac00 \uc6a9\uc774\ud55c \uc124\uacc4\ub97c \ud1b5\ud574 \uc0c8\ub85c\uc6b4 \ucc44\ub110\uc744 \uc27d\uac8c \ucd94\uac00\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h2,{id:"\ub300\uc0c1-\ub3c5\uc790",children:"\ub300\uc0c1 \ub3c5\uc790"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ubc31\uc5d4\ub4dc \uac1c\ubc1c\uc790"}),"\n",(0,r.jsx)(n.li,{children:"\uc2dc\uc2a4\ud15c \uc544\ud0a4\ud14d\ud2b8"}),"\n",(0,r.jsx)(n.li,{children:"\ucc44\ub110 \ud1b5\ud569 \ub2f4\ub2f9\uc790"}),"\n",(0,r.jsx)(n.li,{children:"QA \uc5d4\uc9c0\ub2c8\uc5b4"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"\uc120\ud589-\uc9c0\uc2dd",children:"\uc120\ud589 \uc9c0\uc2dd"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"[ARCH-001] \uc544\ud0a4\ud14d\ucc98 \uac1c\uc694"}),"\n",(0,r.jsx)(n.li,{children:"[DICT-001] \uad6c\ub3c5 \uc0c1\ud0dc \ucf54\ub4dc \uc0ac\uc804"}),"\n",(0,r.jsx)(n.li,{children:"[DICT-003] \uba54\uc2dc\uc9c0 \uc0c1\ud0dc \ubc0f \uc804\uc774 \uaddc\uce59"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-\uc5b4\ub311\ud130-\uc2dc\uc2a4\ud15c-\uac1c\uc694",children:"1. \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c \uac1c\uc694"}),"\n",(0,r.jsx)(n.p,{children:"\ucc44\ub110 \uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c\uc740 \ub2e4\uc591\ud55c \uba54\uc2dc\uc9d5 \ucc44\ub110\uacfc\uc758 \ud1b5\ud569\uc744 \uc77c\uad00\ub41c \uc778\ud130\ud398\uc774\uc2a4\ub85c \ucd94\uc0c1\ud654\ud558\ub294 \ud575\uc2ec \ucef4\ud3ec\ub10c\ud2b8\uc785\ub2c8\ub2e4. \uc774\ub97c \ud1b5\ud574 \uba54\uc2dc\uc9c0 \ucc98\ub9ac \ucf54\uc5b4 \uc2dc\uc2a4\ud15c\uc740 \uac01 \ucc44\ub110\uc758 \ud2b9\uc131\uacfc \uad6c\ud604 \uc138\ubd80\uc0ac\ud56d\uc744 \uc54c \ud544\uc694 \uc5c6\uc774 \ud45c\uc900\ud654\ub41c \ubc29\uc2dd\uc73c\ub85c \uba54\uc2dc\uc9c0\ub97c \uc804\uc1a1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"11-\uc8fc\uc694-\ubaa9\ud45c",children:"1.1 \uc8fc\uc694 \ubaa9\ud45c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc77c\uad00\ub41c \uc778\ud130\ud398\uc774\uc2a4"}),": \ubaa8\ub4e0 \ucc44\ub110\uc5d0 \ub300\ud574 \ub3d9\uc77c\ud55c \uba54\uc2dc\uc9c0 \uc804\uc1a1 \uc778\ud130\ud398\uc774\uc2a4 \uc81c\uacf5"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ud655\uc7a5\uc131"}),": \uc0c8\ub85c\uc6b4 \ucc44\ub110\uc744 \ucd5c\uc18c\ud55c\uc758 \ucf54\ub4dc \ubcc0\uacbd\uc73c\ub85c \ucd94\uac00 \uac00\ub2a5"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc44\ub110 \ub3c5\ub9bd\uc131"}),": \uac01 \ucc44\ub110\uc758 \uad6c\ud604\uc774 \ub2e4\ub978 \ucc44\ub110\uc5d0 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \uc54a\uc74c"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc624\ub958 \ucc98\ub9ac \ud1b5\ud569"}),": \ub2e4\uc591\ud55c \ucc44\ub110\ubcc4 \uc624\ub958\ub97c \ud45c\uc900\ud654\ub41c \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc131\ub2a5 \ucd5c\uc801\ud654"}),": \uac01 \ucc44\ub110\ubcc4 \ucd5c\uc801\ud654\ub41c \uc804\uc1a1 \uc804\ub7b5 \uc801\uc6a9"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"12-\ucc44\ub110-\uc5b4\ub311\ud130-\uc544\ud0a4\ud14d\ucc98-\ub2e4\uc774\uc5b4\uadf8\ub7a8",children:"1.2 \ucc44\ub110 \uc5b4\ub311\ud130 \uc544\ud0a4\ud14d\ucc98 \ub2e4\uc774\uc5b4\uadf8\ub7a8"}),"\n",(0,r.jsx)(n.mermaid,{value:"classDiagram\n    class ChannelAdapter {\n        <<interface>>\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n    }\n\n    class PushAdapter {\n        -apns_config\n        -fcm_config\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n        -send_ios_message(message) Result\n        -send_android_message(message) Result\n        -get_apns_config(subscription) Config\n        -map_apns_error(error) Error\n        -map_fcm_error(error) Error\n    }\n\n    class EmailAdapter {\n        -smtp_config\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n        -format_email(message) Email\n        -track_open(message) Message\n        -track_links(message) Message\n    }\n\n    class SMSAdapter {\n        -sms_gateway_config\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n        -format_sms(message) SMS\n        -select_gateway(message) Gateway\n    }\n\n    class KakaoAdapter {\n        -kakao_api_config\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n        -select_template(message) Template\n        -format_template_variables(message) Variables\n    }\n\n    class InAppAdapter {\n        +send_message(message) Result\n        +validate_message(message) Result\n        +get_status(message_id) Result\n        +map_error(error) Error\n        -format_in_app_message(message) InAppMessage\n    }\n\n    class AdapterFactory {\n        +get_adapter_for_subscription(subscription) ChannelAdapter\n        +get_adapter_for_channel_type(channel_type) ChannelAdapter\n    }\n\n    ChannelAdapter <|.. PushAdapter\n    ChannelAdapter <|.. EmailAdapter\n    ChannelAdapter <|.. SMSAdapter\n    ChannelAdapter <|.. KakaoAdapter\n    ChannelAdapter <|.. InAppAdapter\n\n    AdapterFactory --\x3e ChannelAdapter"}),"\n",(0,r.jsx)(n.h2,{id:"2-\uc5b4\ub311\ud130-\uc778\ud130\ud398\uc774\uc2a4",children:"2. \uc5b4\ub311\ud130 \uc778\ud130\ud398\uc774\uc2a4"}),"\n",(0,r.jsx)(n.p,{children:"\ubaa8\ub4e0 \ucc44\ub110 \uc5b4\ub311\ud130\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uacf5\ud1b5 \uc778\ud130\ud398\uc774\uc2a4\ub97c \uad6c\ud604\ud569\ub2c8\ub2e4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.ChannelAdapter do\n  @callback send_message(message :: AutomataSignal.Resources.Message.t()) ::\n    {:ok, map()} | {:error, map()}\n\n  @callback validate_message(message :: AutomataSignal.Resources.Message.t()) ::\n    :ok | {:error, reason :: atom(), details :: map()}\n\n  @callback get_status(message_id :: String.t()) ::\n    {:ok, status :: atom()} | {:error, reason :: atom()}\n\n  @callback map_error(error :: any()) ::\n    {:permanent, reason :: atom(), details :: map()} |\n    {:temporary, reason :: atom(), details :: map()}\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"21-\uc778\ud130\ud398\uc774\uc2a4-\uba54\uc11c\ub4dc-\uc124\uba85",children:"2.1 \uc778\ud130\ud398\uc774\uc2a4 \uba54\uc11c\ub4dc \uc124\uba85"}),"\n",(0,r.jsx)(n.h4,{id:"211-send_message1",children:"2.1.1 send_message/1"}),"\n",(0,r.jsx)(n.p,{children:"\uba54\uc2dc\uc9c0\ub97c \ud574\ub2f9 \ucc44\ub110\uc744 \ud1b5\ud574 \uc804\uc1a1\ud558\ub294 \ud575\uc2ec \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc785\ub825"}),": ",(0,r.jsx)(n.code,{children:"Message"})," \uad6c\uc870\uccb4 (\uc81c\ubaa9, \ubcf8\ubb38, \ub370\uc774\ud130, \uad6c\ub3c5 \uc815\ubcf4 \ub4f1)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucd9c\ub825"}),": \uc131\uacf5 \uc2dc ",(0,r.jsx)(n.code,{children:"{:ok, response_data}"}),", \uc2e4\ud328 \uc2dc ",(0,r.jsx)(n.code,{children:"{:error, error_data}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc45\uc784"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uba54\uc2dc\uc9c0\ub97c \ucc44\ub110\uc5d0 \ub9de\ub294 \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658"}),"\n",(0,r.jsx)(n.li,{children:"\uc678\ubd80 \uc11c\ube44\uc2a4 API \ud638\ucd9c"}),"\n",(0,r.jsx)(n.li,{children:"\uc751\ub2f5 \ucc98\ub9ac \ubc0f \uacb0\uacfc \ubc18\ud658"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"212-validate_message1",children:"2.1.2 validate_message/1"}),"\n",(0,r.jsx)(n.p,{children:"\uba54\uc2dc\uc9c0\uac00 \ud574\ub2f9 \ucc44\ub110\uc5d0 \uc801\ud569\ud55c\uc9c0 \uac80\uc99d\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc785\ub825"}),": ",(0,r.jsx)(n.code,{children:"Message"})," \uad6c\uc870\uccb4"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucd9c\ub825"}),": \uc720\ud6a8 \uc2dc ",(0,r.jsx)(n.code,{children:":ok"}),", \ubb34\ud6a8 \uc2dc ",(0,r.jsx)(n.code,{children:"{:error, reason, details}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc45\uc784"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud544\uc218 \ud544\ub4dc \uac80\uc99d"}),"\n",(0,r.jsx)(n.li,{children:"\ucc44\ub110\ubcc4 \uc81c\ud55c\uc0ac\ud56d \uac80\uc0ac (\uae38\uc774, \ud615\uc2dd \ub4f1)"}),"\n",(0,r.jsx)(n.li,{children:"\uc720\ud6a8\ud558\uc9c0 \uc54a\uc740 \uacbd\uc6b0 \uc0c1\uc138 \uc624\ub958 \uc815\ubcf4 \uc81c\uacf5"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"213-get_status1",children:"2.1.3 get_status/1"}),"\n",(0,r.jsx)(n.p,{children:"\ud2b9\uc815 \uba54\uc2dc\uc9c0\uc758 \ud604\uc7ac \uc0c1\ud0dc\ub97c \uc870\ud68c\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc785\ub825"}),": \uba54\uc2dc\uc9c0 ID (\ucc44\ub110\ubcc4 \uace0\uc720 \uc2dd\ubcc4\uc790)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucd9c\ub825"}),": \uc131\uacf5 \uc2dc ",(0,r.jsx)(n.code,{children:"{:ok, status}"}),", \uc2e4\ud328 \uc2dc ",(0,r.jsx)(n.code,{children:"{:error, reason}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc45\uc784"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uc678\ubd80 \uc11c\ube44\uc2a4 API\ub97c \ud1b5\ud55c \uc0c1\ud0dc \uc870\ud68c"}),"\n",(0,r.jsx)(n.li,{children:"\ud45c\uc900\ud654\ub41c \uc0c1\ud0dc\uac12\uc73c\ub85c \ubcc0\ud658"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"214-map_error1",children:"2.1.4 map_error/1"}),"\n",(0,r.jsx)(n.p,{children:"\ucc44\ub110\ubcc4 \uc624\ub958\ub97c \ud45c\uc900\ud654\ub41c \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uba54\uc11c\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc785\ub825"}),": \ucc44\ub110 \ud2b9\uc815 \uc624\ub958 \uac1d\uccb4/\uba54\uc2dc\uc9c0"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucd9c\ub825"}),": ",(0,r.jsx)(n.code,{children:"{:permanent, reason, details}"})," \ub610\ub294 ",(0,r.jsx)(n.code,{children:"{:temporary, reason, details}"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc45\uc784"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uc601\uad6c\uc801/\uc77c\uc2dc\uc801 \uc624\ub958 \ubd84\ub958"}),"\n",(0,r.jsx)(n.li,{children:"\uc624\ub958 \ucf54\ub4dc \ubc0f \uba54\uc2dc\uc9c0 \ud45c\uc900\ud654"}),"\n",(0,r.jsx)(n.li,{children:"\uad6c\ub3c5 \uc0c1\ud0dc \ucf54\ub4dc \ub9e4\ud551"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-\ucc44\ub110-\uc5b4\ub311\ud130-\uad6c\ud604",children:"3. \ucc44\ub110 \uc5b4\ub311\ud130 \uad6c\ud604"}),"\n",(0,r.jsx)(n.h3,{id:"31-\ud478\uc2dc-\uc54c\ub9bc-\uc5b4\ub311\ud130",children:"3.1 \ud478\uc2dc \uc54c\ub9bc \uc5b4\ub311\ud130"}),"\n",(0,r.jsx)(n.p,{children:"\ud478\uc2dc \uc54c\ub9bc \uc5b4\ub311\ud130\ub294 iOS(APNS)\uc640 Android(FCM) \ud50c\ub7ab\ud3fc \ubaa8\ub450\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.PushAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n  alias AutomataSignal.Resources.Subscription\n\n  # APNS \uc124\uc815\n  @apns_config %{\n    cert: {:file, "path/to/cert.pem"},\n    key: {:file, "path/to/key.pem"},\n    mode: :prod  # :dev \ub610\ub294 :prod\n  }\n\n  # FCM \uc124\uc815\n  @fcm_config %{\n    key: "your_server_key"\n  }\n\n  @impl true\n  def send_message(%Message{subscription: subscription} = message) do\n    # \uba54\uc2dc\uc9c0 \uac80\uc99d\n    case validate_message(message) do\n      :ok ->\n        # \uad6c\ub3c5 \uc720\ud615\uc5d0 \ub530\ub77c \uc801\uc808\ud55c \uc804\uc1a1 \ubc29\ubc95 \uc120\ud0dd\n        case subscription.type do\n          :iOSPush -> send_ios_message(message)\n          :AndroidPush -> send_android_message(message)\n          _ -> {:error, %{reason: :invalid_subscription_type}}\n        end\n\n      error ->\n        error\n    end\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    cond do\n      is_nil(message.title) and is_nil(message.body) ->\n        {:error, :missing_content, %{message: "Both title and body cannot be empty"}}\n\n      byte_size(message.title || "") > 150 ->\n        {:error, :title_too_long, %{message: "Title exceeds maximum length (150 bytes)"}}\n\n      byte_size(message.body || "") > 4000 ->\n        {:error, :body_too_long, %{message: "Body exceeds maximum length (4000 bytes)"}}\n\n      is_nil(message.subscription) or is_nil(message.subscription.token) ->\n        {:error, :missing_token, %{message: "Push token is required"}}\n\n      true ->\n        :ok\n    end\n  end\n\n  @impl true\n  def get_status(message_id) do\n    # \ub300\ubd80\ubd84\uc758 \ud478\uc2dc \uc11c\ube44\uc2a4\ub294 \uc0c1\ud0dc \uc870\ud68c API\ub97c \uc81c\uacf5\ud558\uc9c0 \uc54a\uc73c\ubbc0\ub85c\n    # \ub85c\uceec \uc0c1\ud0dc \uc800\uc7a5\uc18c\uc5d0\uc11c \uc870\ud68c\n    {:error, :not_supported}\n  end\n\n  @impl true\n  def map_error(error) do\n    case error do\n      # APNS \uc624\ub958 \ub9e4\ud551\n      %{reason: "BadDeviceToken"} ->\n        {:permanent, :invalid_token, %{\n          code: "BadDeviceToken",\n          subscription_status: -10\n        }}\n\n      %{reason: "DeviceTokenNotForTopic"} ->\n        {:permanent, :token_topic_mismatch, %{\n          code: "DeviceTokenNotForTopic",\n          subscription_status: -14\n        }}\n\n      # FCM \uc624\ub958 \ub9e4\ud551\n      %{error: "NotRegistered"} ->\n        {:permanent, :unregistered, %{\n          code: "NotRegistered",\n          subscription_status: -10\n        }}\n\n      %{error: "InvalidRegistration"} ->\n        {:permanent, :invalid_token, %{\n          code: "InvalidRegistration",\n          subscription_status: -4\n        }}\n\n      # \uc11c\ube44\uc2a4 \uc77c\uc2dc\uc801 \uc624\ub958\n      %{status: code} when code >= 500 ->\n        {:temporary, :server_error, %{\n          code: "ServerError",\n          status: code\n        }}\n\n      # \uae30\ubcf8 \uc624\ub958 \ucc98\ub9ac\n      _ ->\n        {:permanent, :unknown_error, %{\n          original_error: inspect(error)\n        }}\n    end\n  end\n\n  # \ub0b4\ubd80 \ud5ec\ud37c \uba54\uc11c\ub4dc\n\n  defp send_ios_message(%Message{} = message) do\n    notification = %{\n      token: message.subscription.token,\n      topic: get_bundle_id(message.application),\n      notification: %{\n        title: message.title,\n        body: message.body\n      },\n      custom: message.data\n    }\n\n    case Pigeon.APNS.push(notification, get_apns_config(message.subscription)) do\n      {:ok, data} ->\n        {:ok, %{provider_message_id: data.id}}\n      {:error, reason} ->\n        {:error, reason}\n    end\n  end\n\n  defp send_android_message(%Message{} = message) do\n    notification = %{\n      to: message.subscription.token,\n      notification: %{\n        title: message.title,\n        body: message.body\n      },\n      data: message.data\n    }\n\n    case Pigeon.FCM.push(notification) do\n      {:ok, data} ->\n        {:ok, %{provider_message_id: data.id}}\n      {:error, reason} ->\n        {:error, reason}\n    end\n  end\n\n  # \ub514\ubc14\uc774\uc2a4\uc758 test_type\uc5d0 \ub530\ub77c APNS \ud658\uacbd \uacb0\uc815\n  defp get_apns_config(%Subscription{test_type: 1}), do: %{@apns_config | mode: :dev}\n  defp get_apns_config(%Subscription{test_type: 2}), do: %{@apns_config | mode: :dev}\n  defp get_apns_config(_), do: @apns_config\n\n  defp get_bundle_id(application) do\n    # \uc571 \uc124\uc815\uc5d0\uc11c \ubc88\ub4e4 ID \uc870\ud68c \ub85c\uc9c1\n    application.settings["ios_bundle_id"] || "com.default.app"\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"32-\uc774\uba54\uc77c-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",children:"3.2 \uc774\uba54\uc77c \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)"}),"\n",(0,r.jsx)(n.p,{children:"\uc774\uba54\uc77c \uc5b4\ub311\ud130\ub294 SMTP \ub610\ub294 AWS SES\uc640 \uac19\uc740 \uc774\uba54\uc77c \uc11c\ube44\uc2a4\uc640 \ud1b5\ud569\ub429\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.EmailAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n\n  @impl true\n  def send_message(%Message{subscription: %{type: :Email, token: email}} = message) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, %{reason: :not_implemented_yet}}\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    cond do\n      is_nil(message.title) ->\n        {:error, :missing_subject, %{message: "Email subject is required"}}\n\n      is_nil(message.body) ->\n        {:error, :missing_body, %{message: "Email body is required"}}\n\n      # \uc774\uba54\uc77c \ud615\uc2dd \uac80\uc99d\n      not valid_email?(message.subscription.token) ->\n        {:error, :invalid_email, %{message: "Invalid email format"}}\n\n      true ->\n        :ok\n    end\n  end\n\n  @impl true\n  def get_status(_message_id) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, :not_implemented_yet}\n  end\n\n  @impl true\n  def map_error(_error) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:permanent, :not_implemented_yet, %{}}\n  end\n\n  # \ub0b4\ubd80 \ud5ec\ud37c \uba54\uc11c\ub4dc\n\n  defp valid_email?(email) do\n    # \uac04\ub2e8\ud55c \uc774\uba54\uc77c \ud615\uc2dd \uac80\uc99d \ub85c\uc9c1\n    Regex.match?(~r/^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/, email)\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"33-sms-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",children:"3.3 SMS \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)"}),"\n",(0,r.jsx)(n.p,{children:"SMS \uc5b4\ub311\ud130\ub294 \ub2e4\uc591\ud55c SMS \uac8c\uc774\ud2b8\uc6e8\uc774\uc640 \ud1b5\ud569\ub429\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.SMSAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n\n  @impl true\n  def send_message(%Message{subscription: %{type: :SMS, token: phone_number}} = message) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, %{reason: :not_implemented_yet}}\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    cond do\n      is_nil(message.body) ->\n        {:error, :missing_body, %{message: "SMS body is required"}}\n\n      byte_size(message.body) > 160 ->\n        {:error, :body_too_long, %{message: "SMS body exceeds 160 characters"}}\n\n      # \uc804\ud654\ubc88\ud638 \ud615\uc2dd \uac80\uc99d\n      not valid_phone_number?(message.subscription.token) ->\n        {:error, :invalid_phone_number, %{message: "Invalid phone number format"}}\n\n      true ->\n        :ok\n    end\n  end\n\n  @impl true\n  def get_status(_message_id) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, :not_implemented_yet}\n  end\n\n  @impl true\n  def map_error(_error) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:permanent, :not_implemented_yet, %{}}\n  end\n\n  # \ub0b4\ubd80 \ud5ec\ud37c \uba54\uc11c\ub4dc\n\n  defp valid_phone_number?(phone) do\n    # \uac04\ub2e8\ud55c \uc804\ud654\ubc88\ud638 \ud615\uc2dd \uac80\uc99d \ub85c\uc9c1\n    Regex.match?(~r/^\\+?[0-9]{10,15}$/, phone)\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"34-\uce74\uce74\uc624-\uc54c\ub9bc\ud1a1-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",children:"3.4 \uce74\uce74\uc624 \uc54c\ub9bc\ud1a1 \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)"}),"\n",(0,r.jsx)(n.p,{children:"\uce74\uce74\uc624 \uc54c\ub9bc\ud1a1 \uc5b4\ub311\ud130\ub294 \uce74\uce74\uc624 \ube44\uc988\ub2c8\uc2a4 API\uc640 \ud1b5\ud569\ub429\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.KakaoAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n\n  @impl true\n  def send_message(%Message{subscription: %{type: :KakaoTalk, token: phone_number}} = message) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, %{reason: :not_implemented_yet}}\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    cond do\n      is_nil(message.data) || is_nil(message.data["template_code"]) ->\n        {:error, :missing_template, %{message: "Kakao template code is required"}}\n\n      # \ud15c\ud50c\ub9bf \ubcc0\uc218 \uac80\uc99d\n      not valid_template_variables?(message.data) ->\n        {:error, :invalid_template_variables, %{message: "Invalid template variables"}}\n\n      true ->\n        :ok\n    end\n  end\n\n  @impl true\n  def get_status(_message_id) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, :not_implemented_yet}\n  end\n\n  @impl true\n  def map_error(_error) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:permanent, :not_implemented_yet, %{}}\n  end\n\n  # \ub0b4\ubd80 \ud5ec\ud37c \uba54\uc11c\ub4dc\n\n  defp valid_template_variables?(data) do\n    # \ud15c\ud50c\ub9bf \ubcc0\uc218 \uac80\uc99d \ub85c\uc9c1\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    true\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"35-\uc778\uc571-\uba54\uc2dc\uc9c0-\uc5b4\ub311\ud130-\uc9c0\uc6d0-\uc608\uc815",children:"3.5 \uc778\uc571 \uba54\uc2dc\uc9c0 \uc5b4\ub311\ud130 (\uc9c0\uc6d0 \uc608\uc815)"}),"\n",(0,r.jsx)(n.p,{children:"\uc778\uc571 \uba54\uc2dc\uc9c0 \uc5b4\ub311\ud130\ub294 \ud074\ub77c\uc774\uc5b8\ud2b8 SDK\uc640 \ud1b5\ud569\ub429\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.InAppAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n\n  @impl true\n  def send_message(%Message{subscription: %{type: :InAppMessage}} = message) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, %{reason: :not_implemented_yet}}\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    cond do\n      is_nil(message.title) and is_nil(message.body) ->\n        {:error, :missing_content, %{message: "Both title and body cannot be empty"}}\n\n      is_nil(message.data) || is_nil(message.data["layout_type"]) ->\n        {:error, :missing_layout, %{message: "Layout type is required for in-app messages"}}\n\n      true ->\n        :ok\n    end\n  end\n\n  @impl true\n  def get_status(_message_id) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:error, :not_implemented_yet}\n  end\n\n  @impl true\n  def map_error(_error) do\n    # \ud5a5\ud6c4 \uad6c\ud604 \uc608\uc815\n    {:permanent, :not_implemented_yet, %{}}\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"4-\uc5b4\ub311\ud130-\ud329\ud1a0\ub9ac",children:"4. \uc5b4\ub311\ud130 \ud329\ud1a0\ub9ac"}),"\n",(0,r.jsx)(n.p,{children:"\uc5b4\ub311\ud130 \ud329\ud1a0\ub9ac\ub294 \uba54\uc2dc\uc9c0\ub098 \uad6c\ub3c5 \uc815\ubcf4\ub97c \uae30\ubc18\uc73c\ub85c \uc801\uc808\ud55c \ucc44\ub110 \uc5b4\ub311\ud130\ub97c \uc120\ud0dd\ud558\ub294 \uc5ed\ud560\uc744 \ud569\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.AdapterFactory do\n  alias AutomataSignal.Resources.Subscription\n  alias AutomataSignal.Resources.Message\n\n  alias AutomataSignal.Adapters.PushAdapter\n  alias AutomataSignal.Adapters.EmailAdapter\n  alias AutomataSignal.Adapters.SMSAdapter\n  alias AutomataSignal.Adapters.KakaoAdapter\n  alias AutomataSignal.Adapters.InAppAdapter\n\n  @doc """\n  \uad6c\ub3c5 \uc815\ubcf4\ub97c \uae30\ubc18\uc73c\ub85c \uc801\uc808\ud55c \ucc44\ub110 \uc5b4\ub311\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n  """\n  def get_adapter_for_subscription(%Subscription{type: type}) do\n    get_adapter_for_channel_type(type)\n  end\n\n  @doc """\n  \ucc44\ub110 \uc720\ud615\uc744 \uae30\ubc18\uc73c\ub85c \uc801\uc808\ud55c \ucc44\ub110 \uc5b4\ub311\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n  """\n  def get_adapter_for_channel_type(channel_type) do\n    case channel_type do\n      :iOSPush -> PushAdapter\n      :AndroidPush -> PushAdapter\n      :Email -> EmailAdapter\n      :SMS -> SMSAdapter\n      :KakaoTalk -> KakaoAdapter\n      :InAppMessage -> InAppAdapter\n      _ -> raise "Unsupported channel type: #{inspect(channel_type)}"\n    end\n  end\n\n  @doc """\n  \uba54\uc2dc\uc9c0 \uac1d\uccb4\ub97c \uae30\ubc18\uc73c\ub85c \uc801\uc808\ud55c \ucc44\ub110 \uc5b4\ub311\ud130\ub97c \ubc18\ud658\ud569\ub2c8\ub2e4.\n  """\n  def get_adapter_for_message(%Message{subscription: subscription}) do\n    get_adapter_for_subscription(subscription)\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"5-\uba54\uc2dc\uc9c0-\uc804\uc1a1-\ud504\ub85c\uc138\uc2a4",children:"5. \uba54\uc2dc\uc9c0 \uc804\uc1a1 \ud504\ub85c\uc138\uc2a4"}),"\n",(0,r.jsx)(n.p,{children:"\uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\uc1a1 \ud504\ub85c\uc138\uc2a4\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Services.MessageService do\n  alias AutomataSignal.Resources.Message\n  alias AutomataSignal.Adapters.AdapterFactory\n\n  @doc """\n  \uba54\uc2dc\uc9c0\ub97c \uc801\uc808\ud55c \ucc44\ub110\uc744 \ud1b5\ud574 \uc804\uc1a1\ud569\ub2c8\ub2e4.\n  """\n  def send_message(%Message{} = message) do\n    # \uba54\uc2dc\uc9c0\uc5d0 \ub9de\ub294 \uc5b4\ub311\ud130 \uc120\ud0dd\n    adapter = AdapterFactory.get_adapter_for_message(message)\n\n    # \uba54\uc2dc\uc9c0 \uac80\uc99d\n    case adapter.validate_message(message) do\n      :ok ->\n        # \uba54\uc2dc\uc9c0 \uc804\uc1a1\n        case adapter.send_message(message) do\n          {:ok, response} ->\n            # \uc131\uacf5 \ucc98\ub9ac\n            update_message_status(message, :successful, response)\n\n          {:error, error} ->\n            # \uc624\ub958 \ucc98\ub9ac\n            handle_send_error(message, adapter, error)\n        end\n\n      {:error, reason, details} ->\n        # \uac80\uc99d \uc624\ub958 \ucc98\ub9ac\n        update_message_status(message, :failed, %{\n          error_reason: reason,\n          error_details: details\n        })\n    end\n  end\n\n  # \uba54\uc2dc\uc9c0 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8\n  defp update_message_status(message, status, details) do\n    # ... \uba54\uc2dc\uc9c0 \uc0c1\ud0dc \uc5c5\ub370\uc774\ud2b8 \ub85c\uc9c1 ...\n  end\n\n  # \uc804\uc1a1 \uc624\ub958 \ucc98\ub9ac\n  defp handle_send_error(message, adapter, error) do\n    # \uc624\ub958 \ub9e4\ud551\n    case adapter.map_error(error) do\n      {:permanent, reason, details} ->\n        # \uc601\uad6c\uc801 \uc624\ub958 - \uc7ac\uc2dc\ub3c4 \uc5c6\uc74c\n        update_message_status(message, :failed, %{\n          error_reason: reason,\n          error_details: details\n        })\n\n      {:temporary, reason, details} ->\n        # \uc77c\uc2dc\uc801 \uc624\ub958 - \uc7ac\uc2dc\ub3c4 \uc2a4\ucf00\uc904\ub9c1\n        update_message_status(message, :errored, %{\n          error_reason: reason,\n          error_details: details\n        })\n        schedule_retry(message)\n    end\n  end\n\n  # \uba54\uc2dc\uc9c0 \uc7ac\uc2dc\ub3c4 \uc2a4\ucf00\uc904\ub9c1\n  defp schedule_retry(message) do\n    # ... \uc7ac\uc2dc\ub3c4 \uc2a4\ucf00\uc904\ub9c1 \ub85c\uc9c1 ...\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h2,{id:"6-\uc5b4\ub311\ud130-\ud655\uc7a5-\uac00\uc774\ub4dc",children:"6. \uc5b4\ub311\ud130 \ud655\uc7a5 \uac00\uc774\ub4dc"}),"\n",(0,r.jsx)(n.p,{children:"\uc0c8\ub85c\uc6b4 \uba54\uc2dc\uc9d5 \ucc44\ub110\uc744 \ucd94\uac00\ud558\uae30 \uc704\ud55c \uc5b4\ub311\ud130 \uad6c\ud604 \uac00\uc774\ub4dc\uc785\ub2c8\ub2e4."}),"\n",(0,r.jsx)(n.h3,{id:"61-\uae30\ubcf8-\uad6c\ud604-\ub2e8\uacc4",children:"6.1 \uae30\ubcf8 \uad6c\ud604 \ub2e8\uacc4"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ChannelAdapter"})," \ube44\ud5e4\uc774\ube44\uc5b4\ub97c \uad6c\ud604\ud558\ub294 \uc0c8 \ubaa8\ub4c8 \uc0dd\uc131"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud544\uc218 \ucf5c\ubc31 \uba54\uc11c\ub4dc \uad6c\ud604:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"send_message/1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"validate_message/1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"get_status/1"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"map_error/1"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"\ucc44\ub110\ubcc4 \ud2b9\ud654 \ub85c\uc9c1 \uad6c\ud604 (\uba54\uc2dc\uc9c0 \ubcc0\ud658, API \ud638\ucd9c \ub4f1)"}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"AdapterFactory"}),"\uc5d0 \uc0c8 \ucc44\ub110 \uc720\ud615 \ubc0f \uc5b4\ub311\ud130 \ucd94\uac00"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"62-\uc0c8-\uc5b4\ub311\ud130-\uad6c\ud604-\uc608\uc2dc",children:"6.2 \uc0c8 \uc5b4\ub311\ud130 \uad6c\ud604 \uc608\uc2dc"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.WebPushAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n  alias AutomataSignal.Resources.Message\n\n  @impl true\n  def send_message(%Message{subscription: %{type: :WebPush, token: subscription_info}} = message) do\n    # Web Push API \ud1b5\ud569 \ub85c\uc9c1\n    # ...\n  end\n\n  @impl true\n  def validate_message(%Message{} = message) do\n    # Web Push \uba54\uc2dc\uc9c0 \uac80\uc99d \ub85c\uc9c1\n    # ...\n  end\n\n  @impl true\n  def get_status(message_id) do\n    # \uc0c1\ud0dc \uc870\ud68c \ub85c\uc9c1\n    # ...\n  end\n\n  @impl true\n  def map_error(error) do\n    # Web Push \ud2b9\ud654 \uc624\ub958 \ub9e4\ud551\n    # ...\n  end\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"63-adapterfactory-\uc5c5\ub370\uc774\ud2b8",children:"6.3 AdapterFactory \uc5c5\ub370\uc774\ud2b8"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'# AdapterFactory\uc5d0 \uc0c8 \ucc44\ub110 \uc720\ud615 \ucd94\uac00\ndef get_adapter_for_channel_type(channel_type) do\n  case channel_type do\n    # ... \uae30\uc874 \ucc44\ub110 ...\n    :WebPush -> WebPushAdapter\n    _ -> raise "Unsupported channel type: #{inspect(channel_type)}"\n  end\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"64-\uc0c8-\uad6c\ub3c5-\uc720\ud615-\ucd94\uac00",children:"6.4 \uc0c8 \uad6c\ub3c5 \uc720\ud615 \ucd94\uac00"}),"\n",(0,r.jsx)(n.p,{children:"\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc2a4\ud0a4\ub9c8\uc5d0 \uc0c8 \uad6c\ub3c5 \uc720\ud615\uc744 \ucd94\uac00\ud574\uc57c \ud569\ub2c8\ub2e4:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"# Subscription \ub9ac\uc18c\uc2a4 \uc5c5\ub370\uc774\ud2b8\nattribute :type, :atom do\n  constraints [one_of: [\n    :iOSPush, :AndroidPush, :Email, :SMS, :KakaoTalk, :InAppMessage, :WebPush\n  ]]\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"7-\uc131\ub2a5-\ubc0f-\ud655\uc7a5\uc131-\uace0\ub824\uc0ac\ud56d",children:"7. \uc131\ub2a5 \ubc0f \ud655\uc7a5\uc131 \uace0\ub824\uc0ac\ud56d"}),"\n",(0,r.jsx)(n.h3,{id:"71-\uc5f0\uacb0-\ud480\ub9c1",children:"7.1 \uc5f0\uacb0 \ud480\ub9c1"}),"\n",(0,r.jsx)(n.p,{children:"\uc678\ubd80 \uc11c\ube44\uc2a4\uc640\uc758 \uc5f0\uacb0\uc744 \ud6a8\uc728\uc801\uc73c\ub85c \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uc5f0\uacb0 \ud480\ub9c1:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.ConnectionPool do\n  use GenServer\n\n  # \ud480 \uad00\ub9ac \ubc0f \uc5f0\uacb0 \uc7ac\uc0ac\uc6a9 \ub85c\uc9c1\n  # ...\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"72-\ube44\uc728-\uc81c\ud55c-\ucc98\ub9ac",children:"7.2 \ube44\uc728 \uc81c\ud55c \ucc98\ub9ac"}),"\n",(0,r.jsx)(n.p,{children:"API \ube44\uc728 \uc81c\ud55c\uc744 \uad00\ub9ac\ud558\uae30 \uc704\ud55c \uc804\ub7b5:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.RateLimiter do\n  use GenServer\n\n  # \ucc44\ub110\ubcc4 \ube44\uc728 \uc81c\ud55c \ucc98\ub9ac \ub85c\uc9c1\n  # ...\nend\n"})}),"\n",(0,r.jsx)(n.h3,{id:"73-\ubc30\uce58-\ucc98\ub9ac",children:"7.3 \ubc30\uce58 \ucc98\ub9ac"}),"\n",(0,r.jsx)(n.p,{children:"\ub300\ub7c9 \uba54\uc2dc\uc9c0 \uc804\uc1a1\uc744 \uc704\ud55c \ubc30\uce58 \ucc98\ub9ac:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.BatchProcessor do\n  # \uba54\uc2dc\uc9c0 \uadf8\ub8f9\ud654 \ubc0f \ubc30\uce58 \uc804\uc1a1 \ub85c\uc9c1\n  # ...\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"8-\ubaa8\ub2c8\ud130\ub9c1-\ubc0f-\uc9c0\ud45c",children:"8. \ubaa8\ub2c8\ud130\ub9c1 \ubc0f \uc9c0\ud45c"}),"\n",(0,r.jsx)(n.p,{children:"\uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c\uc758 \uc0c1\ud0dc \ubc0f \uc131\ub2a5\uc744 \ubaa8\ub2c8\ud130\ub9c1\ud558\uae30 \uc704\ud55c \uc9c0\ud45c:"}),"\n",(0,r.jsx)(n.h3,{id:"81-\uc131\ub2a5-\uc9c0\ud45c",children:"8.1 \uc131\ub2a5 \uc9c0\ud45c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc804\uc1a1 \uc2dc\uac04"}),": \ucc44\ub110\ubcc4 \ud3c9\uade0/\ucd5c\ub300/\ucd5c\uc18c \uc804\uc1a1 \uc2dc\uac04"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc131\uacf5\ub960"}),": \ucc44\ub110\ubcc4 \uc131\uacf5\uc801\uc778 \uc804\uc1a1 \ube44\uc728"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc624\ub958 \ube44\uc728"}),": \ucc44\ub110\ubcc4 \uc624\ub958 \uc720\ud615 \ubd84\ud3ec"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc7ac\uc2dc\ub3c4 \ube44\uc728"}),": \uc784\uc2dc \uc624\ub958\ub85c \uc778\ud55c \uc7ac\uc2dc\ub3c4 \ube44\uc728"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"82-\uc6b4\uc601-\uc9c0\ud45c",children:"8.2 \uc6b4\uc601 \uc9c0\ud45c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ucc44\ub110\ubcc4 \uc0ac\uc6a9\ub7c9"}),": \uc2dc\uac04\ubcc4/\uc77c\ubcc4 \ucc44\ub110 \uc0ac\uc6a9 \ud1b5\uacc4"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc5f0\uacb0 \ud480 \uc0c1\ud0dc"}),": \ud65c\uc131/\uc720\ud734/\ucd5c\ub300 \uc5f0\uacb0 \uc218"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\ube44\uc728 \uc81c\ud55c \uc0c1\ud0dc"}),": \ucc44\ub110\ubcc4 \ube44\uc728 \uc81c\ud55c \ud788\ud2b8 \ud69f\uc218"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"\uc678\ubd80 \uc11c\ube44\uc2a4 \uac00\uc6a9\uc131"}),": \ucc44\ub110\ubcc4 \uc678\ubd80 \uc11c\ube44\uc2a4 \uc0c1\ud0dc"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"83-\ub85c\uae45-\uc804\ub7b5",children:"8.3 \ub85c\uae45 \uc804\ub7b5"}),"\n",(0,r.jsx)(n.p,{children:"\uac01 \uc5b4\ub311\ud130\ub294 \ub2e4\uc74c\uacfc \uac19\uc740 \uc774\ubca4\ud2b8\ub97c \ub85c\uae45\ud569\ub2c8\ub2e4:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\uba54\uc2dc\uc9c0 \uc804\uc1a1 \uc2dc\ub3c4"}),"\n",(0,r.jsx)(n.li,{children:"\uc804\uc1a1 \uc131\uacf5/\uc2e4\ud328"}),"\n",(0,r.jsx)(n.li,{children:"\uc678\ubd80 \uc11c\ube44\uc2a4 \uc751\ub2f5 (\uc694\uc57d)"}),"\n",(0,r.jsx)(n.li,{children:"\uc624\ub958 \ubc0f \uc608\uc678 \uc0c1\ud669"}),"\n",(0,r.jsx)(n.li,{children:"\ube44\uc728 \uc81c\ud55c \ud788\ud2b8"}),"\n",(0,r.jsx)(n.li,{children:"\uc5f0\uacb0 \ud480 \uc0c1\ud0dc \ubcc0\uacbd"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.Logger do\n  def log_message_send(adapter_type, message_id, result) do\n    # \uba54\uc2dc\uc9c0 \uc804\uc1a1 \ub85c\uae45 \ub85c\uc9c1\n    # ...\n  end\n\n  def log_error(adapter_type, message_id, error) do\n    # \uc624\ub958 \ub85c\uae45 \ub85c\uc9c1\n    # ...\n  end\n\n  # ... \uae30\ud0c0 \ub85c\uae45 \ud568\uc218 ...\nend\n"})}),"\n",(0,r.jsx)(n.h2,{id:"9-\ud14c\uc2a4\ud2b8-\uc804\ub7b5",children:"9. \ud14c\uc2a4\ud2b8 \uc804\ub7b5"}),"\n",(0,r.jsx)(n.p,{children:"\uc5b4\ub311\ud130 \uc2dc\uc2a4\ud15c\uc744 \uc704\ud55c \ud14c\uc2a4\ud2b8 \uc804\ub7b5:"}),"\n",(0,r.jsx)(n.h3,{id:"91-\ub2e8\uc704-\ud14c\uc2a4\ud2b8",children:"9.1 \ub2e8\uc704 \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.p,{children:"\uac01 \uc5b4\ub311\ud130\uc758 \uae30\ub2a5\uc744 \uaca9\ub9ac\ud558\uc5ec \ud14c\uc2a4\ud2b8:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.PushAdapterTest do\n  use ExUnit.Case\n  alias AutomataSignal.Adapters.PushAdapter\n  alias AutomataSignal.Resources.Message\n  alias AutomataSignal.Resources.Subscription\n\n  # \uba54\uc2dc\uc9c0 \uac80\uc99d \ud14c\uc2a4\ud2b8\n  test "validate_message/1 returns :ok for valid messages" do\n    message = %Message{\n      title: "Test Title",\n      body: "Test Body",\n      subscription: %Subscription{type: :iOSPush, token: "valid_token"}\n    }\n\n    assert PushAdapter.validate_message(message) == :ok\n  end\n\n  # \uc624\ub958 \ub9e4\ud551 \ud14c\uc2a4\ud2b8\n  test "map_error/1 correctly maps APNS errors" do\n    error = %{reason: "BadDeviceToken"}\n\n    assert PushAdapter.map_error(error) == {\n      :permanent,\n      :invalid_token,\n      %{code: "BadDeviceToken", subscription_status: -10}\n    }\n  end\n\n  # ... \uae30\ud0c0 \ud14c\uc2a4\ud2b8 ...\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"92-\ud1b5\ud569-\ud14c\uc2a4\ud2b8",children:"9.2 \ud1b5\ud569 \ud14c\uc2a4\ud2b8"}),"\n",(0,r.jsx)(n.p,{children:"\uc5b4\ub311\ud130\uc640 \uc2e4\uc81c \uc678\ubd80 \uc11c\ube44\uc2a4\uc758 \ud1b5\ud569\uc744 \ud14c\uc2a4\ud2b8:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:'defmodule AutomataSignal.Adapters.PushAdapterIntegrationTest do\n  use ExUnit.Case\n  alias AutomataSignal.Adapters.PushAdapter\n\n  # \uc2e4\uc81c \ud14c\uc2a4\ud2b8 \ud1a0\ud070\uc744 \uc0ac\uc6a9\ud55c \uc804\uc1a1 \ud14c\uc2a4\ud2b8\n  @tag :integration\n  test "send_message/1 successfully sends to test device" do\n    # ...\n  end\n\n  # ... \uae30\ud0c0 \ud1b5\ud569 \ud14c\uc2a4\ud2b8 ...\nend\n'})}),"\n",(0,r.jsx)(n.h3,{id:"93-\ubaa8\uc758-\uc5b4\ub311\ud130",children:"9.3 \ubaa8\uc758 \uc5b4\ub311\ud130"}),"\n",(0,r.jsx)(n.p,{children:"\ud14c\uc2a4\ud2b8 \ud658\uacbd\uc744 \uc704\ud55c \ubaa8\uc758 \uc5b4\ub311\ud130 \uad6c\ud604:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-elixir",children:"defmodule AutomataSignal.Adapters.MockAdapter do\n  @behaviour AutomataSignal.Adapters.ChannelAdapter\n\n  @impl true\n  def send_message(message) do\n    # \uba54\uc2dc\uc9c0 ID\ub97c \uae30\ubc18\uc73c\ub85c \uc131\uacf5/\uc2e4\ud328 \uc2dc\ubbac\ub808\uc774\uc158\n    # ...\n  end\n\n  # ... \uae30\ud0c0 \ucf5c\ubc31 \uad6c\ud604 ...\nend\n"})})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);