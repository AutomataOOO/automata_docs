"use strict";(self.webpackChunkautomata_docs=self.webpackChunkautomata_docs||[]).push([[8020],{3715:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"automata-signal/guides/GUIDE-006-framework-specific","title":"[GUIDE-006] Ash Framework \ud2b9\ud654 \uac00\uc774\ub4dc","description":"| \ubc84\uc804 | \ub0a0\uc9dc       | \ubcc0\uacbd \ub0b4\uc6a9      |","source":"@site/docs/automata-signal/guides/GUIDE-006-framework-specific.md","sourceDirName":"automata-signal/guides","slug":"/automata-signal/guides/GUIDE-006-framework-specific","permalink":"/automata_docs/docs/automata-signal/guides/GUIDE-006-framework-specific","draft":false,"unlisted":false,"editUrl":"https://github.com/AutomataOOO/automata_docs/tree/main/docs/automata-signal/guides/GUIDE-006-framework-specific.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"[GUIDE-005] \ubc30\ud3ec \uc6cc\ud06c\ud50c\ub85c\uc6b0","permalink":"/automata_docs/docs/automata-signal/guides/GUIDE-005-deployment-workflow"},"next":{"title":"[DESIGN-001] \uc544\ud0a4\ud14d\ucc98 \uac1c\uc694","permalink":"/automata_docs/docs/automata-signal/designs/DESIGN-001-architecture-overview"}}');var a=s(3420),t=s(3774);const i={},l="[GUIDE-006] Ash Framework \ud2b9\ud654 \uac00\uc774\ub4dc",d={},c=[{value:"\uc694\uc57d",id:"\uc694\uc57d",level:2},{value:"1. Ash Framework \uac1c\uc694",id:"1-ash-framework-\uac1c\uc694",level:2},{value:"1.1 Ash Framework\ub780?",id:"11-ash-framework\ub780",level:3},{value:"1.2 \uc8fc\uc694 \uad6c\uc131 \uc694\uc18c",id:"12-\uc8fc\uc694-\uad6c\uc131-\uc694\uc18c",level:3},{value:"2. Ash \ub9ac\uc18c\uc2a4 \uc815\uc758 \uac00\uc774\ub4dc",id:"2-ash-\ub9ac\uc18c\uc2a4-\uc815\uc758-\uac00\uc774\ub4dc",level:2},{value:"2.1 \ub9ac\uc18c\uc2a4 \uae30\ubcf8 \uad6c\uc870",id:"21-\ub9ac\uc18c\uc2a4-\uae30\ubcf8-\uad6c\uc870",level:3},{value:"2.2 \uc18d\uc131 \uc815\uc758 \ubaa8\ubc94 \uc0ac\ub840",id:"22-\uc18d\uc131-\uc815\uc758-\ubaa8\ubc94-\uc0ac\ub840",level:3},{value:"\uc18d\uc131 \uc815\uc758 \uaddc\uce59",id:"\uc18d\uc131-\uc815\uc758-\uaddc\uce59",level:4},{value:"2.3 \uad00\uacc4 \uc815\uc758 \ubaa8\ubc94 \uc0ac\ub840",id:"23-\uad00\uacc4-\uc815\uc758-\ubaa8\ubc94-\uc0ac\ub840",level:3},{value:"\uad00\uacc4 \uc815\uc758 \uaddc\uce59",id:"\uad00\uacc4-\uc815\uc758-\uaddc\uce59",level:4},{value:"2.4 \uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \uc815\uc758",id:"24-\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\uc815\uc758",level:3},{value:"\uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \uaddc\uce59",id:"\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\uaddc\uce59",level:4},{value:"3. Ash \ud655\uc7a5 \ubaa8\ub4c8 \ud65c\uc6a9 \uac00\uc774\ub4dc",id:"3-ash-\ud655\uc7a5-\ubaa8\ub4c8-\ud65c\uc6a9-\uac00\uc774\ub4dc",level:2},{value:"3.1 AshStateMachine",id:"31-ashstatemachine",level:3},{value:"AshStateMachine \ubaa8\ubc94 \uc0ac\ub840",id:"ashstatemachine-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"3.2 AshArchival",id:"32-asharchival",level:3},{value:"AshArchival \ubaa8\ubc94 \uc0ac\ub840",id:"asharchival-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"3.3 AshPaperTrail",id:"33-ashpapertrail",level:3},{value:"AshPaperTrail \ubaa8\ubc94 \uc0ac\ub840",id:"ashpapertrail-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"3.4 AshOban",id:"34-ashoban",level:3},{value:"AshOban \ubaa8\ubc94 \uc0ac\ub840",id:"ashoban-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"3.5 AshCloak",id:"35-ashcloak",level:3},{value:"AshCloak \ubaa8\ubc94 \uc0ac\ub840",id:"ashcloak-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"3.6 AshMoney \ubc0f AshDoubleEntry",id:"36-ashmoney-\ubc0f-ashdoubleentry",level:3},{value:"AshMoney \ubc0f AshDoubleEntry \ubaa8\ubc94 \uc0ac\ub840",id:"ashmoney-\ubc0f-ashdoubleentry-\ubaa8\ubc94-\uc0ac\ub840",level:4},{value:"4. Ash \uc561\uc158 \uad6c\ud604 \uac00\uc774\ub4dc",id:"4-ash-\uc561\uc158-\uad6c\ud604-\uac00\uc774\ub4dc",level:2},{value:"4.1 \uae30\ubcf8 CRUD \uc561\uc158",id:"41-\uae30\ubcf8-crud-\uc561\uc158",level:3},{value:"4.2 \ucee4\uc2a4\ud140 \uc561\uc158 \uc815\uc758",id:"42-\ucee4\uc2a4\ud140-\uc561\uc158-\uc815\uc758",level:3},{value:"\uc0dd\uc131 \uc561\uc158",id:"\uc0dd\uc131-\uc561\uc158",level:4},{value:"\uc77d\uae30 \uc561\uc158",id:"\uc77d\uae30-\uc561\uc158",level:4},{value:"\uc5c5\ub370\uc774\ud2b8 \uc561\uc158",id:"\uc5c5\ub370\uc774\ud2b8-\uc561\uc158",level:4},{value:"\uc0ad\uc81c \uc561\uc158",id:"\uc0ad\uc81c-\uc561\uc158",level:4},{value:"4.3 \uc561\uc158 \uc778\uc790 \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac",id:"43-\uc561\uc158-\uc778\uc790-\ubc0f-\uc720\ud6a8\uc131-\uac80\uc0ac",level:3},{value:"4.4 \uc561\uc158 \ubcc0\uacbd \ud568\uc218",id:"44-\uc561\uc158-\ubcc0\uacbd-\ud568\uc218",level:3},{value:"5. Ash \ucffc\ub9ac \ubc0f \ub370\uc774\ud130 \ub85c\ub529 \uac00\uc774\ub4dc",id:"5-ash-\ucffc\ub9ac-\ubc0f-\ub370\uc774\ud130-\ub85c\ub529-\uac00\uc774\ub4dc",level:2},{value:"5.1 \uae30\ubcf8 \ucffc\ub9ac \uc791\uc131",id:"51-\uae30\ubcf8-\ucffc\ub9ac-\uc791\uc131",level:3},{value:"5.2 \ud544\ud130\ub9c1 \ud45c\ud604\uc2dd",id:"52-\ud544\ud130\ub9c1-\ud45c\ud604\uc2dd",level:3},{value:"5.3 \uad00\uacc4 \ub85c\ub529",id:"53-\uad00\uacc4-\ub85c\ub529",level:3},{value:"5.4 \uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \ub85c\ub529",id:"54-\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\ub85c\ub529",level:3},{value:"5.5 \ud398\uc774\uc9c0\ub124\uc774\uc158",id:"55-\ud398\uc774\uc9c0\ub124\uc774\uc158",level:3},{value:"5.6 \ud2b8\ub79c\uc7ad\uc158 \ubc0f \uc77c\uad04 \ucc98\ub9ac",id:"56-\ud2b8\ub79c\uc7ad\uc158-\ubc0f-\uc77c\uad04-\ucc98\ub9ac",level:3},{value:"6. Domain \ubc0f API \ubaa8\ub4c8 \uad6c\uc131 \uac00\uc774\ub4dc",id:"6-domain-\ubc0f-api-\ubaa8\ub4c8-\uad6c\uc131-\uac00\uc774\ub4dc",level:2},{value:"6.1 Domain \ubaa8\ub4c8 \uc815\uc758",id:"61-domain-\ubaa8\ub4c8-\uc815\uc758",level:3},{value:"6.2 API \uc561\uc158 \ud638\ucd9c",id:"62-api-\uc561\uc158-\ud638\ucd9c",level:3},{value:"6.3 API \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815",id:"63-api-\ucee8\ud14d\uc2a4\ud2b8-\uc124\uc815",level:3},{value:"7. \ud14c\uc2a4\ud2b8 \uac00\uc774\ub4dc",id:"7-\ud14c\uc2a4\ud2b8-\uac00\uc774\ub4dc",level:2},{value:"7.1 \uae30\ubcf8 \ub9ac\uc18c\uc2a4 \ud14c\uc2a4\ud2b8",id:"71-\uae30\ubcf8-\ub9ac\uc18c\uc2a4-\ud14c\uc2a4\ud2b8",level:3},{value:"7.2 \uad00\uacc4 \ud14c\uc2a4\ud2b8",id:"72-\uad00\uacc4-\ud14c\uc2a4\ud2b8",level:3},{value:"7.3 \uc561\uc158 \ud14c\uc2a4\ud2b8",id:"73-\uc561\uc158-\ud14c\uc2a4\ud2b8",level:3},{value:"7.4 \ucffc\ub9ac \ud14c\uc2a4\ud2b8",id:"74-\ucffc\ub9ac-\ud14c\uc2a4\ud2b8",level:3},{value:"8. \uc131\ub2a5 \ucd5c\uc801\ud654 \ud301",id:"8-\uc131\ub2a5-\ucd5c\uc801\ud654-\ud301",level:2},{value:"8.1 \ub370\uc774\ud130 \ub85c\ub529 \ucd5c\uc801\ud654",id:"81-\ub370\uc774\ud130-\ub85c\ub529-\ucd5c\uc801\ud654",level:3},{value:"8.2 \ucffc\ub9ac \ucd5c\uc801\ud654",id:"82-\ucffc\ub9ac-\ucd5c\uc801\ud654",level:3},{value:"8.3 \uce90\uc2f1 \uc804\ub7b5",id:"83-\uce90\uc2f1-\uc804\ub7b5",level:3},{value:"9. \ubc30\ud3ec \ubc0f \uc6b4\uc601 \uace0\ub824\uc0ac\ud56d",id:"9-\ubc30\ud3ec-\ubc0f-\uc6b4\uc601-\uace0\ub824\uc0ac\ud56d",level:2},{value:"9.1 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uad00\ub9ac",id:"91-\ub9c8\uc774\uadf8\ub808\uc774\uc158-\uad00\ub9ac",level:3},{value:"9.2 \ubc30\ud3ec \uc804\ub7b5",id:"92-\ubc30\ud3ec-\uc804\ub7b5",level:3},{value:"10. \ubb38\uc81c \ud574\uacb0 \ubc0f \ub514\ubc84\uae45",id:"10-\ubb38\uc81c-\ud574\uacb0-\ubc0f-\ub514\ubc84\uae45",level:2},{value:"10.1 \uc77c\ubc18\uc801\uc778 \ubb38\uc81c",id:"101-\uc77c\ubc18\uc801\uc778-\ubb38\uc81c",level:3},{value:"10.2 \ub514\ubc84\uae45 \uae30\uc220",id:"102-\ub514\ubc84\uae45-\uae30\uc220",level:3},{value:"11. \ucc38\uace0 \uc790\ub8cc",id:"11-\ucc38\uace0-\uc790\ub8cc",level:2}];function o(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"guide-006-ash-framework-\ud2b9\ud654-\uac00\uc774\ub4dc",children:"[GUIDE-006] Ash Framework \ud2b9\ud654 \uac00\uc774\ub4dc"})}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"\ubc84\uc804"}),(0,a.jsx)(n.th,{children:"\ub0a0\uc9dc"}),(0,a.jsx)(n.th,{children:"\ubcc0\uacbd \ub0b4\uc6a9"})]})}),(0,a.jsx)(n.tbody,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"1.0"}),(0,a.jsx)(n.td,{children:"2025-04-02"}),(0,a.jsx)(n.td,{children:"\ucd5c\ucd08 \ubb38\uc11c \uc791\uc131"})]})})]}),"\n",(0,a.jsx)(n.h2,{id:"\uc694\uc57d",children:"\uc694\uc57d"}),"\n",(0,a.jsx)(n.p,{children:"\ubcf8 \ubb38\uc11c\ub294 Automata-Signal \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c Ash Framework\ub97c \ud6a8\uacfc\uc801\uc73c\ub85c \ud65c\uc6a9\ud558\ub294 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc0c1\uc138 \uac00\uc774\ub4dc\ub97c \uc81c\uacf5\ud569\ub2c8\ub2e4. Ash \ub9ac\uc18c\uc2a4 \uc815\uc758, \ud655\uc7a5 \ubaa8\ub4c8 \ud65c\uc6a9, \uc561\uc158 \uad6c\ud604, \ucffc\ub9ac, \ub370\uc774\ud130 \ub85c\ub529 \ub4f1 Ash Framework \ud2b9\ud654 \ub0b4\uc6a9\uc744 \uc9d1\uc911\uc801\uc73c\ub85c \ub2e4\ub8f9\ub2c8\ub2e4. \uc774 \uac00\uc774\ub4dc\ub294 Elixir \uae30\ubc18 \ud504\ub85c\uc81d\ud2b8\uc5d0\uc11c \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c \ucc38\uc870 \uc790\ub8cc\ub85c \ud65c\uc6a9\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4."}),"\n",(0,a.jsx)(n.h2,{id:"1-ash-framework-\uac1c\uc694",children:"1. Ash Framework \uac1c\uc694"}),"\n",(0,a.jsx)(n.h3,{id:"11-ash-framework\ub780",children:"1.1 Ash Framework\ub780?"}),"\n",(0,a.jsx)(n.p,{children:"Ash Framework\ub294 Elixir \uae30\ubc18\uc758 \uc120\uc5b8\uc801 \ub370\uc774\ud130 \ubaa8\ub378\ub9c1 \ubc0f \uad00\ub9ac \ud504\ub808\uc784\uc6cc\ud06c\uc785\ub2c8\ub2e4. \ub2e4\uc74c\uacfc \uac19\uc740 \ud575\uc2ec \ud2b9\uc9d5\uc744 \uac00\uc9d1\ub2c8\ub2e4:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc120\uc5b8\uc801 \ub9ac\uc18c\uc2a4 \uc815\uc758"}),": \ub3c4\uba54\uc778 \ubaa8\ub378\uc744 \uba85\ud655\ud558\uace0 \uc751\uc9d1\ub825 \uc788\uac8c \uc815\uc758"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud655\uc7a5 \uac00\ub2a5\ud55c \uc544\ud0a4\ud14d\ucc98"}),": \ud50c\ub7ec\uadf8\uc778 \ud615\ud0dc\uc758 \ub2e4\uc591\ud55c \ud655\uc7a5 \ubaa8\ub4c8 \uc9c0\uc6d0"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud48d\ubd80\ud55c \ucffc\ub9ac API"}),": \ubcf5\uc7a1\ud55c \ucffc\ub9ac\ub97c \uac04\uacb0\ud558\uac8c \uc791\uc131 \uac00\ub2a5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uac15\ub825\ud55c \uc778\uc99d/\uc778\uac00"}),": \uc138\ubc00\ud55c \uc811\uadfc \uc81c\uc5b4 \ub9e4\ucee4\ub2c8\uc998 \uc81c\uacf5"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ub2e4\uc591\ud55c \ub370\uc774\ud130 \uacc4\uce35"}),": PostgreSQL, Mnesia \ub4f1 \ub2e4\uc591\ud55c \ubc31\uc5d4\ub4dc \uc9c0\uc6d0"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"12-\uc8fc\uc694-\uad6c\uc131-\uc694\uc18c",children:"1.2 \uc8fc\uc694 \uad6c\uc131 \uc694\uc18c"}),"\n",(0,a.jsx)(n.p,{children:"Ash Framework\ub294 \ub2e4\uc74c \uc8fc\uc694 \uad6c\uc131 \uc694\uc18c\ub85c \uc774\ub8e8\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Resource"}),": \ub3c4\uba54\uc778 \ubaa8\ub378 \uc815\uc758 (\uc5d4\ud2f0\ud2f0, \uc18d\uc131, \uad00\uacc4)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Action"}),": \ub9ac\uc18c\uc2a4\uc5d0 \ub300\ud55c \uc791\uc5c5 \uc815\uc758 (\uc0dd\uc131, \uc870\ud68c, \uc218\uc815, \uc0ad\uc81c, \ucee4\uc2a4\ud140 \uc791\uc5c5)"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Query"}),": \ub9ac\uc18c\uc2a4 \ub370\uc774\ud130 \ucffc\ub9ac \ubc0f \ud544\ud130\ub9c1"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Domain"}),": \uad00\ub828 \ub9ac\uc18c\uc2a4 \uadf8\ub8f9\ud654 \ubc0f \uc811\uadfc \uaddc\uce59 \uad00\ub9ac"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Registry"}),": \ub9ac\uc18c\uc2a4 \ub4f1\ub85d \ubc0f \uac80\uc0c9"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"DataLayer"}),": \ub370\uc774\ud130 \uc800\uc7a5 \ubc0f \uc870\ud68c \ucd94\uc0c1\ud654"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Extension"}),": \uae30\ub2a5 \ud655\uc7a5 \ubaa8\ub4c8 (\uc0c1\ud0dc \uae30\uacc4, \uc544\uce74\uc774\ube59, \uac10\uc0ac \ucd94\uc801 \ub4f1)"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"2-ash-\ub9ac\uc18c\uc2a4-\uc815\uc758-\uac00\uc774\ub4dc",children:"2. Ash \ub9ac\uc18c\uc2a4 \uc815\uc758 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"21-\ub9ac\uc18c\uc2a4-\uae30\ubcf8-\uad6c\uc870",children:"2.1 \ub9ac\uc18c\uc2a4 \uae30\ubcf8 \uad6c\uc870"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"defmodule MyApp.Resources.MyResource do\n  use Ash.Resource,\n    data_layer: AshPostgres.DataLayer,\n    extensions: [\n      # \ud544\uc694\ud55c \ud655\uc7a5 \ubaa8\ub4c8\ub9cc \ucd94\uac00\n    ]\n\n  # \uc18d\uc131 \uc815\uc758\n  attributes do\n    # ...\n  end\n\n  # \uad00\uacc4 \uc815\uc758\n  relationships do\n    # ...\n  end\n\n  # \uc561\uc158 \uc815\uc758\n  actions do\n    # ...\n  end\n\n  # \uacc4\uc0b0\ub41c \uc18d\uc131\n  calculations do\n    # ...\n  end\n\n  # \uc9d1\uacc4 \uc815\uc758\n  aggregates do\n    # ...\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h3,{id:"22-\uc18d\uc131-\uc815\uc758-\ubaa8\ubc94-\uc0ac\ub840",children:"2.2 \uc18d\uc131 \uc815\uc758 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsx)(n.p,{children:"\uc18d\uc131(attribute)\uc740 \ub9ac\uc18c\uc2a4\uc758 \ub370\uc774\ud130 \ud544\ub4dc\ub97c \uc815\uc758\ud569\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'attributes do\n  # \uae30\ubcf8 \ud0a4 (\ud56d\uc0c1 \uccab \ubc88\uc9f8\ub85c \uc815\uc758)\n  uuid_primary_key :id\n\n  # \uae30\ubcf8 \uc18d\uc131 \uc815\uc758\n  attribute :name, :string do\n    # \uc81c\uc57d \uc870\uac74\n    constraints [required: true, min_length: 2, max_length: 100]\n    # \uae30\ubcf8\uac12\n    default "Unnamed"\n    # \uc124\uba85 (\ubb38\uc11c\ud654)\n    description "\uc0ac\uc6a9\uc790 \uc774\ub984"\n  end\n\n  # \uc5f4\uac70\ud615(enum) \uc18d\uc131\n  attribute :status, :atom do\n    constraints [one_of: [:active, :inactive, :pending]]\n    default :pending\n    description "\uc0ac\uc6a9\uc790 \uc0c1\ud0dc"\n  end\n\n  # \uad6c\uc870\ud654\ub41c \ub370\uc774\ud130\n  attribute :metadata, :map, default: %{}\n\n  # \ud0c0\uc784\uc2a4\ud0ec\ud504 (created_at, updated_at)\n  timestamps()\n\n  # \ubbfc\uac10 \uc815\ubcf4 (\uc554\ud638\ud654 \ud544\uc694)\n  attribute :api_key, :string, sensitive?: true\n\n  # \ube44\uacf5\uac1c \uc18d\uc131 (API \uc751\ub2f5\uc5d0\uc11c \uc81c\uc678)\n  attribute :internal_notes, :string, private?: true\n\n  # \uc0ac\uc6a9\uc790 \uc815\uc758 \ud0c0\uc785\n  attribute :coords, MyApp.Types.GeoPoint\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"\uc18d\uc131-\uc815\uc758-\uaddc\uce59",children:"\uc18d\uc131 \uc815\uc758 \uaddc\uce59"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uae30\ubcf8 \ud0a4"}),": \ud56d\uc0c1 ",(0,a.jsx)(n.code,{children:"uuid_primary_key :id"}),"\ub97c \uc18d\uc131 \ube14\ub85d \ucd5c\uc0c1\ub2e8\uc5d0 \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ub17c\ub9ac\uc801 \uadf8\ub8f9\ud654"}),": \uad00\ub828 \uc18d\uc131\uc744 \ud568\uaed8 \uadf8\ub8f9\ud654\ud558\uace0 \uadf8\ub8f9 \uac04\uc5d0 \uc8fc\uc11d\uc73c\ub85c \uad6c\ubd84\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc81c\uc57d \uc870\uac74"}),": \ubaa8\ub4e0 \ud544\uc218 \ud544\ub4dc\uc5d0 ",(0,a.jsx)(n.code,{children:"constraints [required: true]"}),"\ub97c \uba85\uc2dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uae30\ubcf8\uac12"}),": \uc801\uc808\ud55c \uae30\ubcf8\uac12\uc744 \uc81c\uacf5\ud558\uc5ec \ub370\uc774\ud130 \uc77c\uad00\uc131\uc744 \uc720\uc9c0\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc124\uba85"}),": \ubcf5\uc7a1\ud55c \uc18d\uc131\uc5d0\ub294 ",(0,a.jsx)(n.code,{children:"description"})," \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"23-\uad00\uacc4-\uc815\uc758-\ubaa8\ubc94-\uc0ac\ub840",children:"2.3 \uad00\uacc4 \uc815\uc758 \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsx)(n.p,{children:"\uad00\uacc4(relationship)\ub294 \ub9ac\uc18c\uc2a4 \uac04\uc758 \uc5f0\uacb0\uc744 \uc815\uc758\ud569\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'relationships do\n  # \uc77c\ub300\ub2e4 \uad00\uacc4\n  has_many :messages, MyApp.Resources.Message do\n    destination_attribute :user_id\n    description "\uc0ac\uc6a9\uc790\uac00 \ubcf4\ub0b8 \uba54\uc2dc\uc9c0"\n  end\n\n  # \ub2e4\ub300\uc77c \uad00\uacc4\n  belongs_to :organization, MyApp.Resources.Organization do\n    allow_nil? false # \ud544\uc218 \uad00\uacc4\n    attribute_constraints on_delete: :delete_all # \uc18c\uc720 \uad00\uacc4\n    description "\uc0ac\uc6a9\uc790\uac00 \uc18d\ud55c \uc870\uc9c1"\n  end\n\n  # \uc77c\ub300\uc77c \uad00\uacc4\n  has_one :profile, MyApp.Resources.Profile do\n    destination_attribute :user_id\n    description "\uc0ac\uc6a9\uc790 \ud504\ub85c\ud544"\n  end\n\n  # \ub2e4\ub300\ub2e4 \uad00\uacc4\n  many_to_many :projects, MyApp.Resources.Project do\n    through MyApp.Resources.ProjectMember\n    source_attribute_on_join_resource :user_id\n    destination_attribute_on_join_resource :project_id\n    description "\uc0ac\uc6a9\uc790\uac00 \ucc38\uc5ec\ud558\ub294 \ud504\ub85c\uc81d\ud2b8"\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"\uad00\uacc4-\uc815\uc758-\uaddc\uce59",children:"\uad00\uacc4 \uc815\uc758 \uaddc\uce59"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uad00\uacc4 \uc720\ud615"}),": \uc815\ud655\ud55c \uad00\uacc4 \uc720\ud615(",(0,a.jsx)(n.code,{children:"has_many"}),", ",(0,a.jsx)(n.code,{children:"belongs_to"}),", ",(0,a.jsx)(n.code,{children:"has_one"}),", ",(0,a.jsx)(n.code,{children:"many_to_many"}),")\uc744 \uc120\ud0dd\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc18d\uc131 \uba85\uba85"}),": \uae30\ubcf8 \uc678\ub798 \ud0a4 \uc774\ub984\uc740 ",(0,a.jsx)(n.code,{children:"{\uad00\uacc4\uba85}_id"}),"\uc785\ub2c8\ub2e4. \ub2e4\ub978 \uc774\ub984\uc744 \uc0ac\uc6a9\ud560 \uacbd\uc6b0 ",(0,a.jsx)(n.code,{children:"source_attribute"})," \ub610\ub294 ",(0,a.jsx)(n.code,{children:"destination_attribute"}),"\ub97c \uba85\uc2dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ubb34\uacb0\uc131 \uc81c\uc57d \uc870\uac74"}),": ",(0,a.jsx)(n.code,{children:"on_delete"}),", ",(0,a.jsx)(n.code,{children:"on_update"})," \uc815\ucc45\uc744 \uba85\ud655\ud788 \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud544\uc218 \uad00\uacc4"}),": \ud544\uc218 \uad00\uacc4\ub294 ",(0,a.jsx)(n.code,{children:"allow_nil? false"}),"\ub85c \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc124\uba85"}),": \uac01 \uad00\uacc4\uc758 \uc758\ubbf8\ub97c ",(0,a.jsx)(n.code,{children:"description"}),"\uc5d0 \uba85\uc2dc\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"24-\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\uc815\uc758",children:"2.4 \uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \uc815\uc758"}),"\n",(0,a.jsx)(n.p,{children:"\uacc4\uc0b0\ub41c \uc18d\uc131\uacfc \uc9d1\uacc4\ub294 \ub9ac\uc18c\uc2a4\uc758 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \ub3d9\uc801\uc73c\ub85c \uacc4\uc0b0\ub41c \uac12\uc744 \uc815\uc758\ud569\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uacc4\uc0b0\ub41c \uc18d\uc131\ncalculations do\n  # \uac04\ub2e8\ud55c \uacc4\uc0b0\n  calculate :full_name, :string, expr(first_name <> " " <> last_name)\n\n  # \uc870\uac74\ubd80 \uacc4\uc0b0\n  calculate :subscription_status_text, :string, expr(\n    case subscription_status do\n      1 -> "\ud65c\uc131"\n      0 -> "\ub300\uae30 \uc911"\n      -1 -> "\ub9cc\ub8cc\ub428"\n      _ -> "\uc54c \uc218 \uc5c6\uc74c"\n    end\n  )\n\n  # \uad00\uacc4\ub97c \uc0ac\uc6a9\ud55c \uacc4\uc0b0\n  calculate :has_messages, :boolean, expr(count(messages) > 0)\nend\n\n# \uc9d1\uacc4 \uc815\uc758\naggregates do\n  # \ub2e8\uc21c \uce74\uc6b4\ud2b8\n  count :message_count, :messages\n\n  # \ud569\uacc4\n  sum :total_purchases, :orders, :amount\n\n  # \ud3c9\uade0\n  average :average_rating, :reviews, :rating\n\n  # \ucd5c\uc18c/\ucd5c\ub300\n  max :last_login, :login_events, :timestamp\n  min :first_login, :login_events, :timestamp\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\uaddc\uce59",children:"\uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \uaddc\uce59"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud45c\ud604\uc2dd \uc0ac\uc6a9"}),": \uacc4\uc0b0\ub41c \uc18d\uc131\uc740 ",(0,a.jsx)(n.code,{children:"expr/1"})," \ub9e4\ud06c\ub85c\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc131\ub2a5 \uace0\ub824"}),": \ubcf5\uc7a1\ud55c \uacc4\uc0b0\uc740 \uc131\ub2a5\uc5d0 \uc601\ud5a5\uc744 \uc904 \uc218 \uc788\uc73c\ubbc0\ub85c \ucd5c\uc801\ud654\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uba85\uc2dc\uc801 \ub85c\ub529"}),": \uacc4\uc0b0 \ubc0f \uc9d1\uacc4\ub97c \uc0ac\uc6a9\ud558\uae30 \uc804\uc5d0 ",(0,a.jsx)(n.code,{children:"Ash.Query.load/2"}),"\ub85c \uba85\uc2dc\uc801\uc73c\ub85c \ub85c\ub4dc\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"3-ash-\ud655\uc7a5-\ubaa8\ub4c8-\ud65c\uc6a9-\uac00\uc774\ub4dc",children:"3. Ash \ud655\uc7a5 \ubaa8\ub4c8 \ud65c\uc6a9 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"31-ashstatemachine",children:"3.1 AshStateMachine"}),"\n",(0,a.jsx)(n.p,{children:"\uc0c1\ud0dc \uc804\uc774 \uad00\ub9ac\ub97c \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"use Ash.Resource,\n  extensions: [AshStateMachine.Resource]\n\nattributes do\n  # ...\n  attribute :status, :atom do\n    constraints [one_of: [:pending, :approved, :rejected, :completed]]\n    default :pending\n  end\n  # ...\nend\n\nstate_machine do\n  # \uc0c1\ud0dc \ud544\ub4dc \uc9c0\uc815\n  field :status\n\n  # \ucd08\uae30 \uc0c1\ud0dc \uc815\uc758\n  initial_states [:pending]\n\n  # \uc0c1\ud0dc \uc804\uc774 \uaddc\uce59\n  transitions do\n    transition :approve, from: [:pending], to: :approved\n    transition :reject, from: [:pending], to: :rejected\n    transition :complete, from: [:approved], to: :completed\n    transition :reopen, from: [:rejected, :completed], to: :pending\n  end\n\n  # \uc804\uc774 \uc804/\ud6c4 \ub3d9\uc791 \uc815\uc758\n  on_transition :approve do\n    # \uc804\uc774 \uc804 \uac80\uc99d\n    prevent_transition unless: fn changeset, _ ->\n      has_approval_permission?(changeset)\n    end\n\n    # \uc804\uc774 \uc2dc \uc18d\uc131 \ubcc0\uacbd\n    set_attribute :approved_at, &DateTime.utc_now/0\n    set_attribute :approver_id, fn changeset, _ ->\n      Ash.Changeset.get_context(changeset).actor.id\n    end\n  end\nend\n\n# \uc561\uc158\uc5d0\uc11c \uc0c1\ud0dc \uc804\uc774 \uc0ac\uc6a9\nactions do\n  update :approve do\n    accept []\n    change transition_state(:approve)\n  end\n\n  update :reject do\n    accept [:rejection_reason]\n    change transition_state(:reject)\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h4,{id:"ashstatemachine-\ubaa8\ubc94-\uc0ac\ub840",children:"AshStateMachine \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc0c1\ud0dc \ud544\ub4dc"}),": \uc0c1\ud0dc \ud544\ub4dc\ub294 ",(0,a.jsx)(n.code,{children:":atom"})," \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud558\uace0 \uc720\ud6a8\ud55c \uc0c1\ud0dc \ubaa9\ub85d\uc744 ",(0,a.jsx)(n.code,{children:"constraints [one_of: [...]]"}),"\ub85c \uc81c\ud55c\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc804\uc774 \uaddc\uce59"}),": \ubaa8\ub4e0 \uac00\ub2a5\ud55c \uc0c1\ud0dc \uc804\uc774\ub97c \uba85\uc2dc\uc801\uc73c\ub85c \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc804\uc774 \ub3d9\uc791"}),": \uc0c1\ud0dc \ubcc0\uacbd \uc2dc \ucd94\uac00 \ub3d9\uc791(\ud0c0\uc784\uc2a4\ud0ec\ud504 \uc124\uc815, \uc0ac\uc6a9\uc790 \uae30\ub85d \ub4f1)\uc744 ",(0,a.jsx)(n.code,{children:"on_transition"})," \ube14\ub85d\uc5d0 \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc561\uc158 \uc5f0\uacb0"}),": \uc0c1\ud0dc \uc804\uc774\ub97c \uc704\ud55c \uc804\uc6a9 \uc561\uc158\uc744 \uc815\uc758\ud558\uace0 ",(0,a.jsx)(n.code,{children:"transition_state/1"}),"\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"32-asharchival",children:"3.2 AshArchival"}),"\n",(0,a.jsx)(n.p,{children:"\ub17c\ub9ac\uc801 \uc0ad\uc81c(\uc18c\ud504\ud2b8 \uc0ad\uc81c)\ub97c \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"use Ash.Resource,\n  extensions: [AshArchival.Resource]\n\n# \uc544\uce74\uc774\ube0c \uc18d\uc131 \uc124\uc815\narchival do\n  # \uc544\uce74\uc774\ube0c \uc5ec\ubd80\ub97c \uc800\uc7a5\ud560 \uc18d\uc131\n  archive_attribute :archived\n  # \uc544\uce74\uc774\ube0c \uc2dc\uac04\uc744 \uc800\uc7a5\ud560 \uc18d\uc131\n  archive_timestamp_attribute :archived_at\nend\n\n# \uc911\uc694: \uc544\uce74\uc774\ube0c\ub41c \ub808\ucf54\ub4dc\ub97c \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ud130\ub9c1\nresource do\n  base_filter? true\nend\n\n# \uc544\uce74\uc774\ube0c/\ubcf5\uc6d0 \uc561\uc158\nactions do\n  # \uc544\uce74\uc774\ube0c \uc561\uc158\n  update :archive do\n    accept []\n    change archive()\n  end\n\n  # \ubcf5\uc6d0 \uc561\uc158\n  update :unarchive do\n    accept []\n    change unarchive()\n  end\n\n  # \uc544\uce74\uc774\ube0c\ub41c \ud56d\ubaa9 \ud3ec\ud568 \uc870\ud68c\n  read :read_with_archived do\n    prepare build(load: false)\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h4,{id:"asharchival-\ubaa8\ubc94-\uc0ac\ub840",children:"AshArchival \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"base_filter \ud65c\uc131\ud654"}),": \ud56d\uc0c1 ",(0,a.jsx)(n.code,{children:"resource do base_filter? true end"}),"\ub97c \uc124\uc815\ud558\uc5ec \uc544\uce74\uc774\ube0c\ub41c \ub808\ucf54\ub4dc\uac00 \uae30\ubcf8\uc801\uc73c\ub85c \ud544\ud130\ub9c1\ub418\ub3c4\ub85d \ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc544\uce74\uc774\ube0c \uc561\uc158"}),": \uba85\uc2dc\uc801\uc778 \uc544\uce74\uc774\ube0c/\ubcf5\uc6d0 \uc561\uc158\uc744 \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc544\uce74\uc774\ube0c \uc2dc\uac04 \uae30\ub85d"}),": ",(0,a.jsx)(n.code,{children:"archive_timestamp_attribute"})," \uc124\uc815\uc73c\ub85c \uc544\uce74\uc774\ube0c \uc2dc\uac04\uc744 \uc790\ub3d9\uc73c\ub85c \uae30\ub85d\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc544\uce74\uc774\ube0c \ud3ec\ud568 \ucffc\ub9ac"}),": \ud544\uc694\ud55c \uacbd\uc6b0 \uc544\uce74\uc774\ube0c\ub41c \ud56d\ubaa9\uc744 \ud3ec\ud568\ud55c \uc870\ud68c \uc561\uc158\uc744 \ubcc4\ub3c4\ub85c \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"33-ashpapertrail",children:"3.3 AshPaperTrail"}),"\n",(0,a.jsx)(n.p,{children:"\ubcc0\uacbd \uc774\ub825 \ucd94\uc801\uc744 \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"use Ash.Resource,\n  extensions: [AshPaperTrail.Resource]\n\n# \ubcc0\uacbd \uc774\ub825 \uc124\uc815\npaper_trail do\n  # \ucd94\uc801\ud560 \uc18d\uc131 \uc9c0\uc815\n  track_attribute :status\n  track_attribute :assigned_to_id\n\n  # \uad00\uacc4 \uc5c5\ub370\uc774\ud2b8 \ucd94\uc801\n  track_relationship_updates? true\n\n  # \uc561\ud130(\ubcc0\uacbd \uc8fc\uccb4) \ucd94\uc801\n  monitor_actor? true\n  track_actor? true\n\n  # \ubcc0\uacbd \uc0ac\uc720(\uc120\ud0dd\uc0ac\ud56d)\n  track_reason? true\nend\n\n# \uc561\uc158 \uc124\uc815\nactions do\n  update :assign do\n    accept [:assigned_to_id]\n\n    # \ubcc0\uacbd \uc0ac\uc720 \uc694\uad6c\n    argument :reason, :string do\n      allow_nil? false\n    end\n\n    # \ubcc0\uacbd \uc0ac\uc720 \uc124\uc815\n    change set_context_attribute(:paper_trail_reason, fn changeset ->\n      Ash.Changeset.get_argument(changeset, :reason)\n    end)\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h4,{id:"ashpapertrail-\ubaa8\ubc94-\uc0ac\ub840",children:"AshPaperTrail \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ucd94\uc801 \ub300\uc0c1 \uc120\ud0dd"}),": \ubcc0\uacbd \uc774\ub825\uc774 \ud544\uc694\ud55c \uc911\uc694 \uc18d\uc131\ub9cc ",(0,a.jsx)(n.code,{children:"track_attribute"}),"\ub85c \uc9c0\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc561\ud130 \ucd94\uc801"}),": \ubcc0\uacbd \uc8fc\uccb4\ub97c \ucd94\uc801\ud558\ub824\uba74 ",(0,a.jsx)(n.code,{children:"monitor_actor?"})," \ubc0f ",(0,a.jsx)(n.code,{children:"track_actor?"}),"\ub97c \ud65c\uc131\ud654\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ubcc0\uacbd \uc0ac\uc720"}),": \uc911\uc694\ud55c \ubcc0\uacbd\uc758 \uacbd\uc6b0 ",(0,a.jsx)(n.code,{children:"track_reason?"}),"\ub97c \ud65c\uc131\ud654\ud558\uace0 \uc561\uc158\uc5d0\uc11c \ubcc0\uacbd \uc0ac\uc720\ub97c \uc694\uad6c\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ucee8\ud14d\uc2a4\ud2b8 \ud65c\uc6a9"}),": \uc561\uc158 \uc2e4\ud589 \uc2dc ",(0,a.jsx)(n.code,{children:"Ash.ContextHelpers.set_actor/2"}),"\ub85c \uc561\ud130\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"34-ashoban",children:"3.4 AshOban"}),"\n",(0,a.jsx)(n.p,{children:"\ube44\ub3d9\uae30 \uc791\uc5c5 \ucc98\ub9ac\ub97c \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'use Ash.Resource,\n  extensions: [AshOban.Resource]\n\n# Oban \uc791\uc5c5 \uc124\uc815\noban_job do\n  # \ud050 \uc774\ub984\n  queue :messages\n\n  # \uc6b0\uc120\uc21c\uc704 (\ub0ae\uc744\uc218\ub85d \ub192\uc740 \uc6b0\uc120\uc21c\uc704)\n  priority 3\n\n  # \ucd5c\ub300 \uc7ac\uc2dc\ub3c4 \ud69f\uc218\n  max_attempts 5\n\n  # \uace0\uc720 \uc791\uc5c5 \uc2dd\ubcc4 (\uc911\ubcf5 \ubc29\uc9c0)\n  unique [:message_id]\n\n  # \uc791\uc5c5 \uc720\ud6a8 \uae30\uac04\n  max_age 24 * 60 * 60\n\n  # \uc2e4\ud589\ud560 \uc6cc\ucee4 \uc9c0\uc815\n  worker MyApp.Workers.MessageWorker\n\n  # \ud0dc\uadf8 (\ubd84\ub958 \ubc0f \ud544\ud130\ub9c1\uc6a9)\n  tags ["message", "notification"]\nend\n\n# \uc561\uc158\uc5d0\uc11c \uc791\uc5c5 \uc608\uc57d\nactions do\n  create :schedule_message do\n    accept [:title, :body, :recipient_id]\n\n    # \uc608\uc57d \uc2dc\uac04(\uc120\ud0dd)\n    argument :scheduled_at, :utc_datetime do\n      allow_nil? true\n    end\n\n    # Oban \uc791\uc5c5\uc73c\ub85c \uc2e4\ud589\n    run_oban_job fn changeset ->\n      # \uc791\uc5c5 \uc778\uc790 \uc124\uc815\n      args = %{\n        message_id: Ash.Changeset.get_context(changeset, :message_id),\n        recipient_id: Ash.Changeset.get_attribute(changeset, :recipient_id)\n      }\n\n      # \uc608\uc57d \uc2dc\uac04 \uc124\uc815\n      scheduled_at = Ash.Changeset.get_argument(changeset, :scheduled_at)\n\n      if scheduled_at do\n        {:ok, args, [scheduled_at: scheduled_at]}\n      else\n        {:ok, args}\n      end\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"ashoban-\ubaa8\ubc94-\uc0ac\ub840",children:"AshOban \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc801\uc808\ud55c \ud050 \uc120\ud0dd"}),": \uc791\uc5c5 \uc720\ud615\uc5d0 \ub9de\ub294 \ud050\ub97c \uc120\ud0dd\ud558\uc5ec \uc6b0\uc120\uc21c\uc704 \ubc0f \ucc98\ub9ac\ub7c9\uc744 \uad00\ub9ac\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uace0\uc720\uc131 \uad00\ub9ac"}),": \uc911\ubcf5 \uc791\uc5c5 \ubc29\uc9c0\ub97c \uc704\ud574 ",(0,a.jsx)(n.code,{children:"unique"})," \ud30c\ub77c\ubbf8\ud130\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc7ac\uc2dc\ub3c4 \uc804\ub7b5"}),": \uc911\uc694 \uc791\uc5c5\uc740 ",(0,a.jsx)(n.code,{children:"max_attempts"}),"\ub97c \ub192\uac8c \uc124\uc815\ud558\uace0, \uc77c\uc2dc\uc801 \uc2e4\ud328 \uc2dc \uc9c0\uc218 \ubc31\uc624\ud504 \uc7ac\uc2dc\ub3c4 \uc804\ub7b5\uc744 \uad6c\ud604\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uc791\uc5c5 \uba54\ud0c0\ub370\uc774\ud130"}),": ",(0,a.jsx)(n.code,{children:"tags"}),"\ub97c \uc0ac\uc6a9\ud558\uc5ec \uc791\uc5c5 \ubd84\ub958 \ubc0f \ubaa8\ub2c8\ud130\ub9c1\uc744 \uc6a9\uc774\ud558\uac8c \ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"35-ashcloak",children:"3.5 AshCloak"}),"\n",(0,a.jsx)(n.p,{children:"\ubbfc\uac10 \ub370\uc774\ud130 \uc554\ud638\ud654\ub97c \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"use Ash.Resource,\n  extensions: [AshCloak.Resource]\n\nattributes do\n  # ...\n  # \uc554\ud638\ud654\uac00 \ud544\uc694\ud55c \uc18d\uc131\n  attribute :email, :string, sensitive?: true\n  attribute :phone_number, :string, sensitive?: true\n  attribute :api_token, :string, sensitive?: true\n  # ...\nend\n\n# \uc554\ud638\ud654 \uc124\uc815\nencrypted_attributes do\n  # \uc554\ud638\ud654\ud560 \uc18d\uc131 \uc9c0\uc815\n  attribute :email\n  attribute :phone_number\n  attribute :api_token\n\n  # \uc0ac\uc6a9\ud560 Vault \uc9c0\uc815 (\uc120\ud0dd\uc0ac\ud56d)\n  vault MyApp.Vault.EmailVault, for: [:email]\n  vault MyApp.Vault.PhoneVault, for: [:phone_number]\n  vault MyApp.Vault.TokenVault, for: [:api_token]\nend\n"})}),"\n",(0,a.jsx)(n.h4,{id:"ashcloak-\ubaa8\ubc94-\uc0ac\ub840",children:"AshCloak \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ubbfc\uac10 \ub370\uc774\ud130 \uc2dd\ubcc4"}),": \uac1c\uc778 \uc2dd\ubcc4 \uc815\ubcf4, \uc778\uc99d \uc815\ubcf4, \uae08\uc735 \uc815\ubcf4 \ub4f1 \ubbfc\uac10\ud55c \ub370\uc774\ud130\ub97c \uc2dd\ubcc4\ud558\uace0 ",(0,a.jsx)(n.code,{children:"sensitive?: true"}),"\ub85c \ud45c\uc2dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Vault \uc124\uc815"}),": \ub370\uc774\ud130 \uc720\ud615\ubcc4\ub85c \uc801\uc808\ud55c Vault\ub97c \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud0a4 \uad00\ub9ac"}),": \uc554\ud638\ud654 \ud0a4\ub97c \uc548\uc804\ud558\uac8c \uad00\ub9ac\ud558\uace0 \uc815\uae30\uc801\uc73c\ub85c \uad50\uccb4\ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# Vault \uc124\uc815 \uc608\uc2dc\nconfig :ash_cloak, repo: MyApp.Repo\n\nconfig :ash_cloak, MyApp.Vault.EmailVault,\n  keys: [\n    %{tag: "1", key: :base64.decode("..."), default: true}\n  ]\n'})}),"\n",(0,a.jsx)(n.h3,{id:"36-ashmoney-\ubc0f-ashdoubleentry",children:"3.6 AshMoney \ubc0f AshDoubleEntry"}),"\n",(0,a.jsx)(n.p,{children:"\ud1b5\ud654 \ucc98\ub9ac \ubc0f \uc774\uc911 \uc6d0\uc7a5 \ud68c\uacc4\ub97c \uc704\ud55c \ud655\uc7a5 \ubaa8\ub4c8\uc785\ub2c8\ub2e4:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'use Ash.Resource,\n  extensions: [\n    AshMoney.Resource,\n    AshDoubleEntry.Resource\n  ]\n\nattributes do\n  # ...\n  # \ud1b5\ud654 \uc18d\uc131\n  attribute :price, :money\n  attribute :balance, :money, default: 0\n  # ...\nend\n\n# \uc774\uc911 \uc6d0\uc7a5 \uc124\uc815\ndouble_entry do\n  # \uacc4\uc815 \uc815\uc758\n  account :balance do\n    # \uc5f0\uacb0\ud560 \uc18d\uc131\n    change_attribute :balance\n    # \uacc4\uc815 \uc720\ud615 (\uae08\uc561 \uc99d\uac00 \ubc29\ud5a5)\n    credit_type :increase\n    debit_type :decrease\n  end\nend\n\n# \uc561\uc158\uc5d0\uc11c \uc774\uc911 \uc6d0\uc7a5 \uc0ac\uc6a9\nactions do\n  # \uc785\uae08 \uc561\uc158\n  update :deposit do\n    accept []\n\n    # \uc785\uae08\uc561 \uc778\uc790\n    argument :amount, :decimal do\n      allow_nil? false\n      constraints [greater_than: 0]\n    end\n\n    # \uc774\uc911 \uc6d0\uc7a5 \uac70\ub798\n    change double_entry_credit(:balance) do\n      # \uae08\uc561 \uc124\uc815\n      amount fn changeset ->\n        Ash.Changeset.get_argument(changeset, :amount)\n      end\n\n      # \uac70\ub798 \uc124\uba85\n      description "\uc0ac\uc6a9\uc790 \uc785\uae08"\n\n      # \uba54\ud0c0\ub370\uc774\ud130\n      metadata fn changeset ->\n        %{\n          user_id: Ash.Changeset.get_attribute(changeset, :id),\n          method: Ash.Changeset.get_argument(changeset, :method)\n        }\n      end\n    end\n  end\n\n  # \ucd9c\uae08 \uc561\uc158\n  update :withdraw do\n    accept []\n\n    # \ucd9c\uae08\uc561 \uc778\uc790\n    argument :amount, :decimal do\n      allow_nil? false\n      constraints [greater_than: 0]\n    end\n\n    # \uc774\uc911 \uc6d0\uc7a5 \uac70\ub798\n    change double_entry_debit(:balance) do\n      # \uae08\uc561 \uc124\uc815\n      amount fn changeset ->\n        Ash.Changeset.get_argument(changeset, :amount)\n      end\n\n      # \uac70\ub798 \uc124\uba85\n      description "\uc0ac\uc6a9\uc790 \ucd9c\uae08"\n\n      # \uba54\ud0c0\ub370\uc774\ud130\n      metadata fn changeset ->\n        %{\n          user_id: Ash.Changeset.get_attribute(changeset, :id),\n          method: Ash.Changeset.get_argument(changeset, :method)\n        }\n      end\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"ashmoney-\ubc0f-ashdoubleentry-\ubaa8\ubc94-\uc0ac\ub840",children:"AshMoney \ubc0f AshDoubleEntry \ubaa8\ubc94 \uc0ac\ub840"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\ud1b5\ud654 \uc18d\uc131"}),": \ubaa8\ub4e0 \uae08\uc561 \ud544\ub4dc\ub294 ",(0,a.jsx)(n.code,{children:":money"})," \ud0c0\uc785\uc73c\ub85c \uc815\uc758\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uacc4\uc815 \uc720\ud615"}),": \uac01 \uacc4\uc815\uc758 ",(0,a.jsx)(n.code,{children:"credit_type"})," \ubc0f ",(0,a.jsx)(n.code,{children:"debit_type"}),"\uc744 \ube44\uc988\ub2c8\uc2a4 \uaddc\uce59\uc5d0 \ub9de\uac8c \uc124\uc815\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uac70\ub798 \uba54\ud0c0\ub370\uc774\ud130"}),": \ubaa8\ub4e0 \uac70\ub798\uc5d0 \ucda9\ubd84\ud55c \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\ub97c \uba54\ud0c0\ub370\uc774\ud130\ub85c \ud3ec\ud568\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"\uac70\ub798 \uc124\uba85"}),": \uba85\ud655\ud55c \uac70\ub798 \uc124\uba85\uc744 \uc81c\uacf5\ud558\uc5ec \uac10\uc0ac \ucd94\uc801\uc774 \uc6a9\uc774\ud558\ub3c4\ub85d \ud569\ub2c8\ub2e4."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"4-ash-\uc561\uc158-\uad6c\ud604-\uac00\uc774\ub4dc",children:"4. Ash \uc561\uc158 \uad6c\ud604 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"41-\uae30\ubcf8-crud-\uc561\uc158",children:"4.1 \uae30\ubcf8 CRUD \uc561\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"actions do\n  # \uae30\ubcf8 CRUD \uc561\uc158 \ud65c\uc131\ud654\n  defaults [:create, :read, :update, :destroy]\n\n  # \ubd80\ubd84 \ud65c\uc131\ud654\ub3c4 \uac00\ub2a5\n  # defaults [:create, :read]\nend\n"})}),"\n",(0,a.jsx)(n.h3,{id:"42-\ucee4\uc2a4\ud140-\uc561\uc158-\uc815\uc758",children:"4.2 \ucee4\uc2a4\ud140 \uc561\uc158 \uc815\uc758"}),"\n",(0,a.jsx)(n.h4,{id:"\uc0dd\uc131-\uc561\uc158",children:"\uc0dd\uc131 \uc561\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"actions do\n  # \uc0ac\uc6a9\uc790 \ub4f1\ub85d \uc561\uc158\n  create :register do\n    # \ud5c8\uc6a9\ud560 \uc18d\uc131\n    accept [:email, :password, :first_name, :last_name]\n\n    # \ucd94\uac00 \uc778\uc790\n    argument :terms_accepted, :boolean do\n      allow_nil? false\n      constraints [must_be: true]\n    end\n\n    # \uc720\ud6a8\uc131 \uac80\uc99d\n    validate confirm(:password, :password_confirmation)\n    validate present([:email, :password])\n\n    # \uc18d\uc131 \ubcc0\uacbd\n    change set_attribute(:role, :user)\n    change set_attribute(:status, :pending)\n\n    # \ube44\ubc00\ubc88\ud638 \ud574\uc2f1\n    change fn changeset ->\n      password = Ash.Changeset.get_attribute(changeset, :password)\n      hashed_password = Bcrypt.hash_pwd_salt(password)\n      Ash.Changeset.set_attribute(changeset, :password_hash, hashed_password)\n      |> Ash.Changeset.set_attribute(:password, nil)\n    end\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h4,{id:"\uc77d\uae30-\uc561\uc158",children:"\uc77d\uae30 \uc561\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'actions do\n  # \uc0ac\uc6a9\uc790 \uac80\uc0c9 \uc561\uc158\n  read :search do\n    # \ud544\ud130 \uc778\uc790\n    argument :query, :string do\n      allow_nil? true\n    end\n\n    # \ud544\ud130 \uc801\uc6a9\n    filter expr(\n      is_nil(^arg(:query)) or\n      first_name ilike ^"%#{arg(:query)}%" or\n      last_name ilike ^"%#{arg(:query)}%" or\n      email == ^arg(:query)\n    )\n\n    # \ud398\uc774\uc9c0\ub124\uc774\uc158\n    pagination keyset?: true, default_limit: 20\n\n    # \uc815\ub82c\n    sort [:last_name, :first_name]\n  end\n\n  # \ud65c\uc131 \uc0ac\uc6a9\uc790\ub9cc \uc870\ud68c\n  read :active_users do\n    filter expr(status == :active)\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"\uc5c5\ub370\uc774\ud2b8-\uc561\uc158",children:"\uc5c5\ub370\uc774\ud2b8 \uc561\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'actions do\n  # \ud504\ub85c\ud544 \uc5c5\ub370\uc774\ud2b8 \uc561\uc158\n  update :update_profile do\n    # \ud5c8\uc6a9\ud560 \uc18d\uc131\n    accept [:first_name, :last_name, :bio, :avatar_url]\n\n    # \uc720\ud6a8\uc131 \uac80\uc99d\n    validate present([:first_name, :last_name])\n\n    # \ud604\uc7ac \uc0ac\uc6a9\uc790\ub9cc \uc218\uc815 \uac00\ub2a5\n    authorize :update\n  end\n\n  # \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd \uc561\uc158\n  update :change_password do\n    # \uc785\ub825 \uc778\uc790\n    argument :current_password, :string do\n      allow_nil? false\n    end\n\n    argument :new_password, :string do\n      allow_nil? false\n      constraints [min_length: 8]\n    end\n\n    argument :new_password_confirmation, :string do\n      allow_nil? false\n    end\n\n    # \uc720\ud6a8\uc131 \uac80\uc99d\n    validate confirm(:new_password, :new_password_confirmation)\n\n    # \ud604\uc7ac \ube44\ubc00\ubc88\ud638 \ud655\uc778\n    validate fn changeset ->\n      current = Ash.Changeset.get_argument(changeset, :current_password)\n      hash = Ash.Changeset.get_attribute(changeset, :password_hash)\n\n      if Bcrypt.verify_pass(current, hash) do\n        :ok\n      else\n        {:error, field: :current_password, message: "\ud604\uc7ac \ube44\ubc00\ubc88\ud638\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4"}\n      end\n    end\n\n    # \uc0c8 \ube44\ubc00\ubc88\ud638 \ud574\uc2f1\n    change fn changeset ->\n      new_password = Ash.Changeset.get_argument(changeset, :new_password)\n      hashed_password = Bcrypt.hash_pwd_salt(new_password)\n      Ash.Changeset.set_attribute(changeset, :password_hash, hashed_password)\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h4,{id:"\uc0ad\uc81c-\uc561\uc158",children:"\uc0ad\uc81c \uc561\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'actions do\n  # \uacc4\uc815 \uc0ad\uc81c \uc561\uc158\n  destroy :delete_account do\n    # \uc785\ub825 \uc778\uc790\n    argument :confirmation, :string do\n      allow_nil? false\n      constraints [must_be: "DELETE"]\n    end\n\n    # \ub300\uc548\uc73c\ub85c \uc544\uce74\uc774\ube0c \uc0ac\uc6a9\n    soft? true\n\n    # \uc2e4\ud589 \uc804 \ucf5c\ubc31\n    before_transaction fn changeset ->\n      # \uacc4\uc815 \uc0ad\uc81c \uc804 \uc815\ub9ac \uc791\uc5c5\n      user_id = Ash.Changeset.get_attribute(changeset, :id)\n      MyApp.UserCleanupService.schedule_cleanup(user_id)\n      {:ok, changeset}\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h3,{id:"43-\uc561\uc158-\uc778\uc790-\ubc0f-\uc720\ud6a8\uc131-\uac80\uc0ac",children:"4.3 \uc561\uc158 \uc778\uc790 \ubc0f \uc720\ud6a8\uc131 \uac80\uc0ac"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uc561\uc158 \uc778\uc790 \uc815\uc758\nargument :search_term, :string do\n  # \ud544\uc218 \uc5ec\ubd80\n  allow_nil? true\n  # \uae30\ubcf8\uac12\n  default ""\n  # \uc81c\uc57d \uc870\uac74\n  constraints [min_length: 3]\n  # \uc124\uba85\n  description "\uac80\uc0c9\uc5b4"\nend\n\n# \uacf5\ud1b5 \uc720\ud6a8\uc131 \uac80\uc0ac\nvalidate present([:field1, :field2])\nvalidate confirm(:password, :password_confirmation)\nvalidate is_unique(:email)\nvalidate format(:email, ~r/@/)\nvalidate min_length(:password, 8)\nvalidate max_length(:bio, 500)\n\n# \ucee4\uc2a4\ud140 \uc720\ud6a8\uc131 \uac80\uc0ac\nvalidate fn changeset ->\n  field1 = Ash.Changeset.get_attribute(changeset, :field1)\n  field2 = Ash.Changeset.get_attribute(changeset, :field2)\n\n  if some_condition?(field1, field2) do\n    :ok\n  else\n    {:error, field: :field1, message: "\ucee4\uc2a4\ud140 \uc624\ub958 \uba54\uc2dc\uc9c0"}\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h3,{id:"44-\uc561\uc158-\ubcc0\uacbd-\ud568\uc218",children:"4.4 \uc561\uc158 \ubcc0\uacbd \ud568\uc218"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uc18d\uc131 \uc124\uc815\nchange set_attribute(:field, "value")\n\n# \ub3d9\uc801 \uc18d\uc131 \uc124\uc815\nchange set_attribute(:created_at, &DateTime.utc_now/0)\n\n# \uc778\uc790 \uae30\ubc18 \uc18d\uc131 \uc124\uc815\nchange set_attribute(:field, fn changeset ->\n  Ash.Changeset.get_argument(changeset, :arg_name)\nend)\n\n# \uad00\uacc4 \uad00\ub9ac\nchange manage_relationship(:posts, %{title: "\uc0c8 \ud3ec\uc2a4\ud2b8"})\n\n# \uc0c1\ud0dc \uc804\uc774\nchange transition_state(:approve)\n\n# \uc774\uc911 \uc6d0\uc7a5 \uac70\ub798\nchange double_entry_credit(:account, 100)\n\n# \ucee4\uc2a4\ud140 \ubcc0\uacbd \ud568\uc218\nchange fn changeset, _ ->\n  # \ub85c\uc9c1 \uad6c\ud604\n  modified_changeset = do_something(changeset)\n  modified_changeset\nend\n'})}),"\n",(0,a.jsx)(n.h2,{id:"5-ash-\ucffc\ub9ac-\ubc0f-\ub370\uc774\ud130-\ub85c\ub529-\uac00\uc774\ub4dc",children:"5. Ash \ucffc\ub9ac \ubc0f \ub370\uc774\ud130 \ub85c\ub529 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"51-\uae30\ubcf8-\ucffc\ub9ac-\uc791\uc131",children:"5.1 \uae30\ubcf8 \ucffc\ub9ac \uc791\uc131"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubaa8\ub4e0 \ub808\ucf54\ub4dc \uc870\ud68c\nusers = MyApp.Accounts.User\n|> Ash.Query.filter(status == :active)\n|> Ash.Query.sort(inserted_at: :desc)\n|> Ash.Query.limit(10)\n|> MyApp.Accounts.read!()\n\n# \ub2e8\uc77c \ub808\ucf54\ub4dc \uc870\ud68c\nuser = MyApp.Accounts.User\n|> Ash.Query.filter(id == ^user_id)\n|> Ash.Query.limit(1)\n|> MyApp.Accounts.read_one!()\n\n# \uce74\uc6b4\ud2b8 \uc870\ud68c\ncount = MyApp.Accounts.User\n|> Ash.Query.filter(status == :active)\n|> Ash.Query.count!()\n"})}),"\n",(0,a.jsx)(n.h3,{id:"52-\ud544\ud130\ub9c1-\ud45c\ud604\uc2dd",children:"5.2 \ud544\ud130\ub9c1 \ud45c\ud604\uc2dd"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uae30\ubcf8 \ube44\uad50\nAsh.Query.filter(user_resource, id == ^user_id)\nAsh.Query.filter(user_resource, age > 18)\nAsh.Query.filter(user_resource, status != :inactive)\n\n# \ub17c\ub9ac \uc5f0\uc0b0\nAsh.Query.filter(user_resource, status == :active and role == :admin)\nAsh.Query.filter(user_resource, status == :active or status == :pending)\nAsh.Query.filter(user_resource, not is_nil(email))\n\n# \uceec\ub809\uc158 \uc5f0\uc0b0\nAsh.Query.filter(user_resource, role in [:admin, :moderator])\nAsh.Query.filter(user_resource, :admin in roles)\n\n# \ubb38\uc790\uc5f4 \uc5f0\uc0b0\nAsh.Query.filter(user_resource, first_name ilike ^"john%")\nAsh.Query.filter(user_resource, email == email_address)\n\n# \ub0a0\uc9dc \uc5f0\uc0b0\nAsh.Query.filter(user_resource, inserted_at > ^one_week_ago)\nAsh.Query.filter(user_resource, is_nil(deleted_at))\n\n# \uad00\uacc4 \ud544\ud130\nAsh.Query.filter(user_resource, exists(posts, title ilike ^"%keyword%"))\nAsh.Query.filter(user_resource, count(posts) > 0)\n'})}),"\n",(0,a.jsx)(n.h3,{id:"53-\uad00\uacc4-\ub85c\ub529",children:"5.3 \uad00\uacc4 \ub85c\ub529"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ub2e8\uc77c \uad00\uacc4 \ub85c\ub4dc\nuser = MyApp.Accounts.User\n|> Ash.Query.filter(id == ^user_id)\n|> Ash.Query.load(:profile)  # has_one \uad00\uacc4\n|> MyApp.Accounts.read_one!()\n\n# \ub2e4\uc911 \uad00\uacc4 \ub85c\ub4dc\nuser = MyApp.Accounts.User\n|> Ash.Query.filter(id == ^user_id)\n|> Ash.Query.load([:profile, :posts])\n|> MyApp.Accounts.read_one!()\n\n# \uc911\ucca9 \uad00\uacc4 \ub85c\ub4dc\nuser = MyApp.Accounts.User\n|> Ash.Query.filter(id == ^user_id)\n|> Ash.Query.load([posts: [:comments, :category]])\n|> MyApp.Accounts.read_one!()\n\n# \uad00\uacc4 \ud544\ud130\ub9c1\nuser = MyApp.Accounts.User\n|> Ash.Query.filter(id == ^user_id)\n|> Ash.Query.load(posts: fn query ->\n  query\n  |> Ash.Query.filter(published == true)\n  |> Ash.Query.sort(published_at: :desc)\n  |> Ash.Query.limit(5)\nend)\n|> MyApp.Accounts.read_one!()\n"})}),"\n",(0,a.jsx)(n.h3,{id:"54-\uacc4\uc0b0-\ubc0f-\uc9d1\uacc4-\ub85c\ub529",children:"5.4 \uacc4\uc0b0 \ubc0f \uc9d1\uacc4 \ub85c\ub529"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \uacc4\uc0b0\ub41c \uc18d\uc131 \ub85c\ub4dc\nusers = MyApp.Accounts.User\n|> Ash.Query.load(:full_name)  # \uacc4\uc0b0\ub41c \uc18d\uc131\n|> MyApp.Accounts.read!()\n\n# \uc9d1\uacc4 \ub85c\ub4dc\nusers = MyApp.Accounts.User\n|> Ash.Query.load(:post_count)  # \uc9d1\uacc4\n|> MyApp.Accounts.read!()\n\n# \uacc4\uc0b0\ub41c \uc18d\uc131\uc744 \uae30\uc900\uc73c\ub85c \uc815\ub82c\nusers = MyApp.Accounts.User\n|> Ash.Query.load(:full_name)\n|> Ash.Query.sort(:full_name)\n|> MyApp.Accounts.read!()\n\n# \uacc4\uc0b0\ub41c \uc18d\uc131 \ud544\ud130\ub9c1 (\ub7f0\ud0c0\uc784 \ud544\ud130)\nusers = MyApp.Accounts.User\n|> Ash.Query.load(:post_count)\n|> MyApp.Accounts.read!()\n|> Enum.filter(fn user -> user.post_count > 10 end)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"55-\ud398\uc774\uc9c0\ub124\uc774\uc158",children:"5.5 \ud398\uc774\uc9c0\ub124\uc774\uc158"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \uc624\ud504\uc14b \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158\n{users, pagination} = MyApp.Accounts.User\n|> Ash.Query.sort(inserted_at: :desc)\n|> Ash.Query.page(offset: 0, limit: 20)\n|> MyApp.Accounts.read!()\n\n# \ud0a4\uc14b \uae30\ubc18 \ud398\uc774\uc9c0\ub124\uc774\uc158 (\uad8c\uc7a5)\n{users, pagination} = MyApp.Accounts.User\n|> Ash.Query.sort(inserted_at: :desc)\n|> Ash.Query.paginate(:keyset, limit: 20)\n|> MyApp.Accounts.read!()\n\n# \ub2e4\uc74c \ud398\uc774\uc9c0 \ub85c\ub4dc\n{next_users, pagination} = MyApp.Accounts.User\n|> Ash.Query.sort(inserted_at: :desc)\n|> Ash.Query.paginate(:keyset, limit: 20, after: pagination.after_key)\n|> MyApp.Accounts.read!()\n\n# \uc774\uc804 \ud398\uc774\uc9c0 \ub85c\ub4dc\n{prev_users, pagination} = MyApp.Accounts.User\n|> Ash.Query.sort(inserted_at: :desc)\n|> Ash.Query.paginate(:keyset, limit: 20, before: pagination.before_key)\n|> MyApp.Accounts.read!()\n"})}),"\n",(0,a.jsx)(n.h3,{id:"56-\ud2b8\ub79c\uc7ad\uc158-\ubc0f-\uc77c\uad04-\ucc98\ub9ac",children:"5.6 \ud2b8\ub79c\uc7ad\uc158 \ubc0f \uc77c\uad04 \ucc98\ub9ac"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \ud2b8\ub79c\uc7ad\uc158 \ub0b4\uc5d0\uc11c \uc5ec\ub7ec \uc791\uc5c5 \uc218\ud589\nAsh.transaction(fn ->\n  # \uc0ac\uc6a9\uc790 \uc0dd\uc131\n  {:ok, user} = MyApp.Accounts.User\n  |> Ash.Changeset.for_create(:create, %{email: "user@example.com"})\n  |> MyApp.Accounts.create!()\n\n  # \ud504\ub85c\ud544 \uc0dd\uc131\n  {:ok, profile} = MyApp.Accounts.Profile\n  |> Ash.Changeset.for_create(:create, %{user_id: user.id, bio: "..."})\n  |> MyApp.Accounts.create!()\n\n  # \ucd08\uae30 \uc124\uc815 \uc0dd\uc131\n  {:ok, settings} = MyApp.Accounts.UserSettings\n  |> Ash.Changeset.for_create(:create, %{user_id: user.id})\n  |> MyApp.Accounts.create!()\n\n  {:ok, {user, profile, settings}}\nend)\n\n# \ub370\uc774\ud130 \ubc30\uce58 \ucc98\ub9ac\nusers\n|> Enum.chunk_every(100)\n|> Enum.each(fn batch ->\n  Ash.transaction(fn ->\n    Enum.each(batch, fn user ->\n      user\n      |> Ash.Changeset.for_update(:update, %{status: :verified})\n      |> MyApp.Accounts.update!()\n    end)\n  end)\nend)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"6-domain-\ubc0f-api-\ubaa8\ub4c8-\uad6c\uc131-\uac00\uc774\ub4dc",children:"6. Domain \ubc0f API \ubaa8\ub4c8 \uad6c\uc131 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"61-domain-\ubaa8\ub4c8-\uc815\uc758",children:"6.1 Domain \ubaa8\ub4c8 \uc815\uc758"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"defmodule MyApp.Accounts do\n  use Ash.Domain\n\n  resources do\n    resource MyApp.Accounts.User\n    resource MyApp.Accounts.Profile\n    resource MyApp.Accounts.UserSettings\n    resource MyApp.Accounts.LoginEvent\n  end\nend\n\ndefmodule MyApp.Messaging do\n  use Ash.Domain\n\n  resources do\n    resource MyApp.Messaging.Message\n    resource MyApp.Messaging.Conversation\n    resource MyApp.Messaging.Attachment\n  end\nend\n"})}),"\n",(0,a.jsx)(n.h3,{id:"62-api-\uc561\uc158-\ud638\ucd9c",children:"6.2 API \uc561\uc158 \ud638\ucd9c"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uc0dd\uc131 \uc561\uc158\n{:ok, user} = MyApp.Accounts.create(User, %{\n  email: "user@example.com",\n  first_name: "John",\n  last_name: "Doe"\n})\n\n# \uc77d\uae30 \uc561\uc158\n{:ok, users} = MyApp.Accounts.read(User, filter: [status: :active])\n\n# \ub2e8\uc77c \ub808\ucf54\ub4dc \uc77d\uae30\n{:ok, user} = MyApp.Accounts.get(User, id)\n\n# \uc5c5\ub370\uc774\ud2b8 \uc561\uc158\n{:ok, user} = MyApp.Accounts.update(User, id, %{status: :active})\n\n# \uc0ad\uc81c \uc561\uc158\n{:ok, _} = MyApp.Accounts.destroy(User, id)\n\n# \ucee4\uc2a4\ud140 \uc561\uc158 \ud638\ucd9c\n{:ok, user} = MyApp.Accounts.register(User, %{\n  email: "user@example.com",\n  password: "password123",\n  password_confirmation: "password123",\n  terms_accepted: true\n})\n'})}),"\n",(0,a.jsx)(n.h3,{id:"63-api-\ucee8\ud14d\uc2a4\ud2b8-\uc124\uc815",children:"6.3 API \ucee8\ud14d\uc2a4\ud2b8 \uc124\uc815"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# \uc561\ud130(\uc778\uc99d\ub41c \uc0ac\uc6a9\uc790) \uc124\uc815\ncontext = %{actor: current_user}\n\n# \uc778\uc99d\ub41c \uc0ac\uc6a9\uc790 \uc815\ubcf4\ub85c \uc561\uc158 \ud638\ucd9c\n{:ok, message} = MyApp.Messaging.create(Message, %{\n  body: "Hello",\n  recipient_id: recipient_id\n}, context: context)\n\n# \ucd94\uac00 \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4 \uc124\uc815\ncontext = %{\n  actor: current_user,\n  tenant: tenant_id,\n  ip_address: client_ip\n}\n\n# \ucee8\ud14d\uc2a4\ud2b8\uc640 \ud568\uaed8 \uc561\uc158 \ud638\ucd9c\n{:ok, user} = MyApp.Accounts.update(User, user_id, %{\n  status: :verified\n}, context: context)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"7-\ud14c\uc2a4\ud2b8-\uac00\uc774\ub4dc",children:"7. \ud14c\uc2a4\ud2b8 \uac00\uc774\ub4dc"}),"\n",(0,a.jsx)(n.h3,{id:"71-\uae30\ubcf8-\ub9ac\uc18c\uc2a4-\ud14c\uc2a4\ud2b8",children:"7.1 \uae30\ubcf8 \ub9ac\uc18c\uc2a4 \ud14c\uc2a4\ud2b8"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'defmodule MyApp.AccountsTest.UserTest do\n  use MyApp.DataCase\n  alias MyApp.Accounts\n  alias MyApp.Accounts.User\n\n  describe "create user" do\n    test "creates a user with valid attributes" do\n      attrs = %{\n        email: "test@example.com",\n        first_name: "John",\n        last_name: "Doe",\n        password: "password123",\n        password_confirmation: "password123"\n      }\n\n      assert {:ok, user} = Accounts.create(User, attrs)\n      assert user.email == "test@example.com"\n      assert user.first_name == "John"\n      assert user.last_name == "Doe"\n    end\n\n    test "fails with invalid attributes" do\n      attrs = %{\n        email: "invalid-email",\n        first_name: "",\n        last_name: ""\n      }\n\n      assert {:error, changeset} = Accounts.create(User, attrs)\n      assert errors_on(changeset).email\n      assert errors_on(changeset).first_name\n      assert errors_on(changeset).last_name\n    end\n  end\n\n  describe "register user" do\n    test "registers a user with valid attributes" do\n      attrs = %{\n        email: "test@example.com",\n        first_name: "John",\n        last_name: "Doe",\n        password: "password123",\n        password_confirmation: "password123",\n        terms_accepted: true\n      }\n\n      assert {:ok, user} = Accounts.register(User, attrs)\n      assert user.status == :pending\n      assert user.role == :user\n    end\n\n    test "fails when terms not accepted" do\n      attrs = %{\n        email: "test@example.com",\n        first_name: "John",\n        last_name: "Doe",\n        password: "password123",\n        password_confirmation: "password123",\n        terms_accepted: false\n      }\n\n      assert {:error, changeset} = Accounts.register(User, attrs)\n      assert errors_on(changeset).terms_accepted\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h3,{id:"72-\uad00\uacc4-\ud14c\uc2a4\ud2b8",children:"7.2 \uad00\uacc4 \ud14c\uc2a4\ud2b8"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'defmodule MyApp.AccountsTest.ProfileTest do\n  use MyApp.DataCase\n  alias MyApp.Accounts\n  alias MyApp.Accounts.{User, Profile}\n\n  setup do\n    {:ok, user} = Accounts.create(User, %{\n      email: "test@example.com",\n      first_name: "John",\n      last_name: "Doe"\n    })\n\n    %{user: user}\n  end\n\n  test "creates a profile for user", %{user: user} do\n    attrs = %{\n      user_id: user.id,\n      bio: "Test bio",\n      avatar_url: "https://example.com/avatar.jpg"\n    }\n\n    assert {:ok, profile} = Accounts.create(Profile, attrs)\n    assert profile.user_id == user.id\n    assert profile.bio == "Test bio"\n\n    # \uad00\uacc4 \ub85c\ub4dc \uac80\uc99d\n    user_with_profile = user\n    |> Ash.Query.load(:profile)\n    |> Accounts.read_one!()\n\n    assert user_with_profile.profile.id == profile.id\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h3,{id:"73-\uc561\uc158-\ud14c\uc2a4\ud2b8",children:"7.3 \uc561\uc158 \ud14c\uc2a4\ud2b8"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'defmodule MyApp.AccountsTest.UserActionsTest do\n  use MyApp.DataCase\n  alias MyApp.Accounts\n  alias MyApp.Accounts.User\n\n  setup do\n    {:ok, user} = Accounts.create(User, %{\n      email: "test@example.com",\n      first_name: "John",\n      last_name: "Doe",\n      status: :active,\n      password_hash: Bcrypt.hash_pwd_salt("password123")\n    })\n\n    %{user: user}\n  end\n\n  describe "change_password action" do\n    test "changes password with valid input", %{user: user} do\n      params = %{\n        current_password: "password123",\n        new_password: "newpassword456",\n        new_password_confirmation: "newpassword456"\n      }\n\n      assert {:ok, updated_user} = Accounts.change_password(User, user.id, params)\n\n      # \ube44\ubc00\ubc88\ud638\uac00 \ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0 \ud655\uc778\n      assert Bcrypt.verify_pass("newpassword456", updated_user.password_hash)\n    end\n\n    test "fails with incorrect current password", %{user: user} do\n      params = %{\n        current_password: "wrongpassword",\n        new_password: "newpassword456",\n        new_password_confirmation: "newpassword456"\n      }\n\n      assert {:error, changeset} = Accounts.change_password(User, user.id, params)\n      assert errors_on(changeset).current_password\n    end\n\n    test "fails with password confirmation mismatch", %{user: user} do\n      params = %{\n        current_password: "password123",\n        new_password: "newpassword456",\n        new_password_confirmation: "different"\n      }\n\n      assert {:error, changeset} = Accounts.change_password(User, user.id, params)\n      assert errors_on(changeset).new_password_confirmation\n    end\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h3,{id:"74-\ucffc\ub9ac-\ud14c\uc2a4\ud2b8",children:"7.4 \ucffc\ub9ac \ud14c\uc2a4\ud2b8"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'defmodule MyApp.AccountsTest.UserQueriesTest do\n  use MyApp.DataCase\n  alias MyApp.Accounts\n  alias MyApp.Accounts.User\n\n  setup do\n    # \ud14c\uc2a4\ud2b8 \ub370\uc774\ud130 \uc0dd\uc131\n    {:ok, _} = Accounts.create(User, %{\n      email: "admin@example.com",\n      first_name: "Admin",\n      last_name: "User",\n      status: :active,\n      role: :admin\n    })\n\n    {:ok, _} = Accounts.create(User, %{\n      email: "inactive@example.com",\n      first_name: "Inactive",\n      last_name: "User",\n      status: :inactive,\n      role: :user\n    })\n\n    for i <- 1..5 do\n      {:ok, _} = Accounts.create(User, %{\n        email: "user#{i}@example.com",\n        first_name: "User",\n        last_name: "#{i}",\n        status: :active,\n        role: :user\n      })\n    end\n\n    :ok\n  end\n\n  test "filters active users" do\n    query = User\n    |> Ash.Query.filter(status == :active)\n    |> Ash.Query.sort(email: :asc)\n\n    assert {:ok, users} = Accounts.read(query)\n    assert length(users) == 6\n    assert Enum.all?(users, &(&1.status == :active))\n  end\n\n  test "searches users by name" do\n    query = User\n    |> Ash.Query.filter(first_name == "Admin" or first_name == "Inactive")\n    |> Ash.Query.sort(email: :asc)\n\n    assert {:ok, users} = Accounts.read(query)\n    assert length(users) == 2\n    assert Enum.map(users, & &1.first_name) == ["Admin", "Inactive"]\n  end\n\n  test "paginates results" do\n    query = User\n    |> Ash.Query.filter(role == :user)\n    |> Ash.Query.sort(email: :asc)\n    |> Ash.Query.page(limit: 2, offset: 0)\n\n    assert {:ok, {users, pagination}} = Accounts.read(query)\n    assert length(users) == 2\n    assert pagination.count == 6\n    assert pagination.limit == 2\n    assert pagination.offset == 0\n  end\nend\n'})}),"\n",(0,a.jsx)(n.h2,{id:"8-\uc131\ub2a5-\ucd5c\uc801\ud654-\ud301",children:"8. \uc131\ub2a5 \ucd5c\uc801\ud654 \ud301"}),"\n",(0,a.jsx)(n.h3,{id:"81-\ub370\uc774\ud130-\ub85c\ub529-\ucd5c\uc801\ud654",children:"8.1 \ub370\uc774\ud130 \ub85c\ub529 \ucd5c\uc801\ud654"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ud544\uc694\ud55c \ub370\uc774\ud130\ub9cc \ub85c\ub4dc"}),": \ud544\uc694\ud55c \uc18d\uc131\uacfc \uad00\uacc4\ub9cc \uba85\uc2dc\uc801\uc73c\ub85c \ub85c\ub4dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ud2b9\uc815 \ud544\ub4dc\ub9cc \uc120\ud0dd\nUser\n|> Ash.Query.select([:id, :email, :first_name, :last_name])\n|> Ash.Query.load(:profile)\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"N+1 \ubb38\uc81c \ubc29\uc9c0"}),": \uad00\uacc4\ub97c \ubbf8\ub9ac \ub85c\ub4dc\ud558\uc5ec N+1 \ucffc\ub9ac \ubb38\uc81c\ub97c \ubc29\uc9c0\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubaa8\ub4e0 \uad00\uacc4\ub97c \ubbf8\ub9ac \ub85c\ub4dc\nposts = Post\n|> Ash.Query.load([:author, comments: [:author]])\n|> MyApp.Blog.read!()\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ubc30\uce58 \ub85c\ub529"}),": \ub300\ub7c9 \ub370\uc774\ud130\ub294 \ubc30\uce58\ub85c \ucc98\ub9ac\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"Stream.resource(\n  fn -> 0 end,\n  fn offset ->\n    query = User\n    |> Ash.Query.sort(id: :asc)\n    |> Ash.Query.page(limit: 100, offset: offset)\n\n    case MyApp.Accounts.read(query) do\n      {:ok, {[], _}} -> {:halt, nil}\n      {:ok, {users, _}} -> {[users], offset + 100}\n      _ -> {:halt, nil}\n    end\n  end,\n  fn _ -> :ok end\n)\n|> Stream.flat_map(& &1)\n|> Stream.each(fn user -> process_user(user) end)\n|> Stream.run()\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"82-\ucffc\ub9ac-\ucd5c\uc801\ud654",children:"8.2 \ucffc\ub9ac \ucd5c\uc801\ud654"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uc778\ub371\uc2a4 \ud65c\uc6a9"}),": \uc790\uc8fc \ud544\ud130\ub9c1\ud558\ub294 \ud544\ub4dc\uc5d0 \uc778\ub371\uc2a4\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# PostgreSQL \uc778\ub371\uc2a4 \uc124\uc815\npostgres do\n  index [:email], unique: true\n  index [:status, :role]\n  index [:last_name, :first_name]\nend\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ubcf5\ud569 \ucffc\ub9ac \ucd5c\uc801\ud654"}),": \ubcf5\uc7a1\ud55c \ucffc\ub9ac\ub294 \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc218\uc900\uc5d0\uc11c \ucd5c\uc801\ud654\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ucee4\uc2a4\ud140 \ucffc\ub9ac \uc0ac\uc6a9\nread :complex_search do\n  prepare build(load: false)\n\n  argument :query, :string\n\n  manual fn _query, %{query: query}, _context ->\n    sql = \"\"\"\n    SELECT * FROM users\n    WHERE to_tsvector('english', first_name || ' ' || last_name || ' ' || email) @@ plainto_tsquery('english', $1)\n    ORDER BY last_name, first_name\n    LIMIT 20\n    \"\"\"\n\n    # SQL \uc2e4\ud589 (\uc608\uc2dc)\n    {:ok, results} = MyApp.Repo.query(sql, [query])\n\n    # \uacb0\uacfc\ub97c Ash \ub9ac\uc18c\uc2a4\ub85c \ubcc0\ud658\n    # ...\n  end\nend\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ubd80\ubd84 \uc778\ub371\uc2a4"}),": \ud2b9\uc815 \uc870\uac74\uc5d0\ub9cc \uc778\ub371\uc2a4\ub97c \uc801\uc6a9\ud558\uc5ec \uc131\ub2a5\uc744 \ucd5c\uc801\ud654\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubd80\ubd84 \uc778\ub371\uc2a4 \uc608\uc2dc\npostgres do\n  index [:status, :last_active_at], where: \"status = 'active'\"\nend\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"83-\uce90\uc2f1-\uc804\ub7b5",children:"8.3 \uce90\uc2f1 \uc804\ub7b5"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ucffc\ub9ac \uacb0\uacfc \uce90\uc2f1"}),": \uc790\uc8fc \uc811\uadfc\ud558\ub294 \ub370\uc774\ud130\ub97c \uce90\uc2dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'def get_active_users do\n  cache_key = "active_users"\n\n  case MyApp.Cache.get(cache_key) do\n    {:ok, users} when users != nil ->\n      users\n    _ ->\n      users = User\n      |> Ash.Query.filter(status == :active)\n      |> MyApp.Accounts.read!()\n\n      MyApp.Cache.put(cache_key, users, ttl: 300) # 5\ubd84 \uce90\uc2f1\n      users\n  end\nend\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uacc4\uc0b0 \uacb0\uacfc \uce90\uc2f1"}),": \ube44\uc6a9\uc774 \ub9ce\uc774 \ub4dc\ub294 \uacc4\uc0b0 \uacb0\uacfc\ub97c \uce90\uc2dc\ud569\ub2c8\ub2e4."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"calculations do\n  calculate :complex_score, :float, {MyApp.Calculations.ComplexScore, ttl: 3600}\nend\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"9-\ubc30\ud3ec-\ubc0f-\uc6b4\uc601-\uace0\ub824\uc0ac\ud56d",children:"9. \ubc30\ud3ec \ubc0f \uc6b4\uc601 \uace0\ub824\uc0ac\ud56d"}),"\n",(0,a.jsx)(n.h3,{id:"91-\ub9c8\uc774\uadf8\ub808\uc774\uc158-\uad00\ub9ac",children:"9.1 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uad00\ub9ac"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uc548\uc804\ud55c \ub9c8\uc774\uadf8\ub808\uc774\uc158"}),": \ud558\uc704 \ud638\ud658\uc131\uc744 \uc720\uc9c0\ud558\ub294 \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc124\uacc4"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \uc548\uc804\ud55c \uc5f4 \ucd94\uac00\ndef change do\n  alter table(:users) do\n    add :middle_name, :string, null: true\n  end\nend\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc0dd\uc131"}),": ash_postgres \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2a4\ud06c\ub9bd\ud2b8 \uc0dd\uc131"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mix ash_postgres.generate_migrations\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc801\uc6a9"}),": \ub9c8\uc774\uadf8\ub808\uc774\uc158 \uc2e4\ud589"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mix ecto.migrate\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"92-\ubc30\ud3ec-\uc804\ub7b5",children:"9.2 \ubc30\ud3ec \uc804\ub7b5"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ub9b4\ub9ac\uc2a4 \ube4c\ub4dc"}),": \ub9b4\ub9ac\uc2a4 \ud328\ud0a4\uc9c0 \uc0dd\uc131"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"MIX_ENV=prod mix release\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ud658\uacbd \uad6c\uc131"}),": \ud658\uacbd\ubcc4 \uc124\uc815 \uad00\ub9ac"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'# config/runtime.exs\nconfig :my_app, MyApp.Repo,\n  url: System.fetch_env!("DATABASE_URL"),\n  pool_size: String.to_integer(System.get_env("POOL_SIZE") || "10")\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ub9b4\ub9ac\uc2a4 \ub9c8\uc774\uadf8\ub808\uc774\uc158"}),": \ubc30\ud3ec \uc2dc \uc790\ub3d9 \ub9c8\uc774\uadf8\ub808\uc774\uc158"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# lib/my_app/release.ex\ndefmodule MyApp.Release do\n  def migrate do\n    Application.load(:my_app)\n\n    for repo <- Application.fetch_env!(:my_app, :ecto_repos) do\n      {:ok, _, _} = Ecto.Migrator.with_repo(\n        repo,\n        &Ecto.Migrator.run(&1, :up, all: true)\n      )\n    end\n  end\nend\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"10-\ubb38\uc81c-\ud574\uacb0-\ubc0f-\ub514\ubc84\uae45",children:"10. \ubb38\uc81c \ud574\uacb0 \ubc0f \ub514\ubc84\uae45"}),"\n",(0,a.jsx)(n.h3,{id:"101-\uc77c\ubc18\uc801\uc778-\ubb38\uc81c",children:"10.1 \uc77c\ubc18\uc801\uc778 \ubb38\uc81c"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uad00\uacc4 \ub85c\ub4dc \uc2e4\ud328"}),": \uad00\uacc4\uac00 \ub85c\ub4dc\ub418\uc9c0 \uc54a\uc744 \ub54c"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubb38\uc81c: user.posts\uac00 nil\nuser = MyApp.Accounts.get!(User, id)\n\n# \ud574\uacb0: \uba85\uc2dc\uc801\uc73c\ub85c \uad00\uacc4 \ub85c\ub4dc\nuser = User\n|> Ash.Query.filter(id == ^id)\n|> Ash.Query.load(:posts)\n|> MyApp.Accounts.read_one!()\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uacc4\uc0b0\ub41c \uc18d\uc131 \uc811\uadfc \uc2e4\ud328"}),": \uacc4\uc0b0\ub41c \uc18d\uc131\uc774 nil\uc77c \ub54c"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubb38\uc81c: user.full_name\uc774 nil\nuser = MyApp.Accounts.get!(User, id)\n\n# \ud574\uacb0: \uba85\uc2dc\uc801\uc73c\ub85c \uacc4\uc0b0\ub41c \uc18d\uc131 \ub85c\ub4dc\nuser = User\n|> Ash.Query.filter(id == ^id)\n|> Ash.Query.load(:full_name)\n|> MyApp.Accounts.read_one!()\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ud544\ud130 \uc778\uc790 \uc624\ub958"}),": \ud544\ud130\uc5d0\uc11c \uc778\uc790\ub97c \uc0ac\uc6a9\ud560 \ub54c"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# \ubb38\uc81c: \uc778\uc790 \ubc14\uc778\ub529 \uc624\ub958\nquery = User\n|> Ash.Query.filter(email == user_email)\n\n# \ud574\uacb0: pin \uc5f0\uc0b0\uc790(^) \uc0ac\uc6a9\nquery = User\n|> Ash.Query.filter(email == ^user_email)\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"102-\ub514\ubc84\uae45-\uae30\uc220",children:"10.2 \ub514\ubc84\uae45 \uae30\uc220"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uccb4\uc778\uc9c0\uc14b \uac80\uc0ac"}),": \uccb4\uc778\uc9c0\uc14b \ub0b4\uc6a9 \ud655\uc778"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'changeset = User\n|> Ash.Changeset.for_create(:create, attrs)\n\nIO.inspect(changeset, label: "Changeset")\nIO.inspect(Ash.Changeset.get_attributes(changeset), label: "Attributes")\nIO.inspect(Ash.Changeset.get_errors(changeset), label: "Errors")\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\ucffc\ub9ac \uc778\uc2a4\ud399\uc158"}),": \uc0dd\uc131\ub41c SQL \ucffc\ub9ac \ud655\uc778 (PostgreSQL)"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:"# config/dev.exs\nconfig :ash_postgres, :repo_log_level, :debug\n"})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\uc5d0\ub7ec \ucc98\ub9ac"}),": \uc0c1\uc138 \uc5d0\ub7ec \uc815\ubcf4 \ud655\uc778"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-elixir",children:'case MyApp.Accounts.create(User, attrs) do\n  {:ok, user} ->\n    # \uc131\uacf5 \ucc98\ub9ac\n  {:error, error} ->\n    IO.inspect(error, label: "Error")\n    IO.inspect(errors_on(error), label: "Errors On")\n    # \uc5d0\ub7ec \ucc98\ub9ac\nend\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"11-\ucc38\uace0-\uc790\ub8cc",children:"11. \ucc38\uace0 \uc790\ub8cc"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://hexdocs.pm/ash/get-started.html",children:"Ash Framework \uacf5\uc2dd \ubb38\uc11c"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://ash-hq.org/docs/extensions",children:"Ash Extensions \ubb38\uc11c"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://hexdocs.pm/ash_postgres/AshPostgres.html",children:"Ash Postgres \ubb38\uc11c"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://hexdocs.pm/ash_phoenix/AshPhoenix.html",children:"Ash Phoenix \ubb38\uc11c"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://elixirforum.com/c/elixir-framework-forum/ash-framework/107",children:"Elixir Forum - Ash \uce74\ud14c\uace0\ub9ac"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},3774:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>l});var r=s(6672);const a={},t=r.createContext(a);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);